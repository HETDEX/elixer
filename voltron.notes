
==========================

Hi Dustin,

Ive uploaded all of the files I think you should need for the EGS to:
/work/03564/stevenf/maverick/EGS/

- In the images directory, you can see all of the HST images (the extension drz are the science frames).

- In the photometry directory is the multi wavelength catalog.
For now, Id suggest plotting the five HST bands (F606W, F814W, F125W, F140W, F160W),
along with the CFHT u-band, and the IRAC Ch1 and Ch2 (3.6 and 4.5um) fluxes.

- In the photoz directory, there is a catalog with one line per object.
I would use the z_best column for now (the z_best_type tells you if its photoz or specz or grism;
spec-z's are included where possible).  The zPDF subdirectory includes the photo-z.
Id say plot the photo-z for every object, but where there is a spec-z, find a way to indicate that in the plot.

Let me know what questions you have, thanks.

- Steve

===========================

voltron:
top level 
input - 
	RA, DEC, error radius
optional input - 
	dither file
    detect line file
	2D spectra file(s) (e.g. from which to take hetdex cutouts)
	name of output file (and type?)
	
	
needs configuration file:
	where to search for hetdex cutouts (path)
		-- this would need to look in fits headers for RA,Dec in range of error radius
		

output:
	file (pdf or html?) with information on 
	* the passed in target (RA,Dec, error radius) ? Name, Field (etc from FITS header)
	* detect information? (Chi2, S/N, etc)
	* other TBD information (from analysis of FITS file(s))
	
	for each bid object in catalog(s): sort by probability of match
	* catalog name
	* object name (or catalog ID)
	* object RA,Dec
	* distance from target RA,DEC
	* probability that is a match for target (TBD - based on angular distance and other factors)
	* computed object info (rest-frame EW, if LAE, if OII, etc)
	* photo-Z or other Z measure(s)
	* fluxes in band-passes
	* SED
	* imaging 
	





//maybe need a catalog base class then implement a child for each catalog
//catalogs may be too different to bother with a data-driven config (it might be simpler to just implement child Catalogs)
Catalog (interface) class:
needs configuration file:

	name of catalog
	location of catalog (e.g. local path or URL)
	info on how to query
	what info (fields) are available (photZ, SED, etc)
	RA, DEC ranges covered by catalog (todo: need way to specify the area covered so can query if target RA,DEC is in catalog)
	
on instantiation, load the catalog into a Pandas frame, but do not load large files (i.e. images, pdfs ... load references or  paths to them if nedded)
is_in_cat()?
    check that the target RA,Dec is in range of catalog RA,Dec (maybe, for now, gross rectangle minRA,minDec to maxRa,maxDec)



CatalogLibrary
//list or set wrapper of all catalogs
can query with RA,Dec ... returns catalogs that could match, etc.


Coord (class): (does astropy already have this?)
store RA,DEC in, say decimal degrees
accept RA,DEC in any format
return RA,DEC in any format




