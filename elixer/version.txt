changes to elixer by version


1.20.3 [2023-08-15]
* fixed typo in "bright" CONTINUUM_RULES definition. Was using 8.5e-17 (should have been 8.5e-18) for g ~ 22
* do not allow weak multiline solution to set the redshift for continuum bright
  + combined with 8.5e-17 typo was allowing poor CIII fits to replace OII classifications
* limit max sigma on quick fits to the larger 20.0 or 2x anchor line (with uncertainty)
* fix bug in zPDF area (was using z +/- 0.1 ... was supposed to be z +/- 0.1 * z  ... 10% of z not +/- 0.1 in z)
  + this could erroneously boost solution, particularly at low z
* tweak unmatched line penality. Does not apply if the solution has 3+ lines, more lines than the unmatched lines, and
  a lager score than the unmatched line score.

1.20.2 [2023-08-09]
* fix error in limiting maximum Gaussian fit sigma

1.20.1 [2023-08-08]
* add flagging check for DETFLAG_BAD_FIBERTRACE if the fiber trace has negative pixel coordinates or if 20% of all
  fibers in det are chi2  > 2.0 or 30% plus 2 (really bad) or 3 (bad + really bad) of top 4 fibers
  + new flag DETFLAG_BAD_FIBERTRACE 0x20000000
* fixed mis-aligned cutouts and colors when fiber trace has negative pixel coords


1.20.0 [2023-07-31]
* tag as 1.20.0 for HDR4 and merge with main branch
  note: per fiber and zero point still being tuned but those features are NOT USED during an HDRx run
* move _mini.png creation to free image buffers after each detection to save on active memory
* add memory retries on spectra collection in neighbors
* minor logging fix
* fixed stupid MCMC bug with absorbers that limited the continuum to 2x the depth of the absorber
* updated emission vs absorption selection when both are available as central wavelength
* updated pathing for HDR4 and lonestar6
* update angular size vote to also include major/minor ratio when the major is intermediate (3" to 9")


1.20.0a9 [2023-07-24]
* adding catalog support for fpack
  + optional (temporary) force use of fpack with --fz; this will compress and save the fits if the compressed version
    is not already found IF ON LOCAL TEST HOST
* updated elixer::build_neighborhood_map() to use HETDEX_API Detections Index rather than direct access to HDF5
* added safety checks for --continuum vs detection IDs (must match, all continuum or all line)
* added safety check for HDR version config vs detectID HDR version (i.e. detectID prefix must match)
* limit seeing selection for residual model to

1.20.0a8 [2023-07-10]
* small tweaks to sky residual correction in progress (extreme blue and red ends, slight variation in model and selection)
* working on support for Lonestar6
* allow Aperture level sky residual model correction (--skyres 2)
  + dedicated aperture level models
* spectrum_utilities interpolate_universal_single_fiber_sky_subtraction_residual() no longer enforces the configuration
  that --skyres is non zero. The caller must enforce.
* tweak constency with AGN check() to also consider just the presence of significantly detected common AGN lines even
  if their flux ratios are out of predefined range. (note: if the flux ratios are in the inconsitent range, the penalty
  cancels the bonus just for their existence).
* fix bug that was applying neighbor corrections to the anchor spectra instead of to the neighbor spectra
* leave np.nan in place in spectra
* slightly tune sigma width vote when equivalent width is low

1.20.0a7 [2023-07-07]
* working on support for Lonestar6
* allow --skyres, --zeroflat, and --zeropoint on "normal" non-re-extraced HETDEX reports. The correction is made at the
  aperture level rather than the fiber level. Fefaults are all OFF and must be explicitly turned ON.
* corrected/tweak OII override of LyA redshift for very weak multiline solution where the supporting line(s) are of
  poor rank. Only triggered when emission line is broader than 15AA FWHM and was inteded to look for MgII, OIII, OIV

1.20.0a6 [2023-06-30]
* fully split zeropoint correction and sky residual correction
    + updated use of --zeropoint
* added --skyres to toggle on/off change sky residual subtraction mode
* added --zeroflat If set on commandline, will turn ON a correction on the sky residual model s|t the flat part (3900-
  -5400AA) is near zero by shifting the model down by the average (median) over that range. The assumption here is that
  the flat part is the true average background residual where the blue (< 3900AA) is artificial. If turned on, the per
  fiber correction then just fixes the blue part but leaves the average background in place. Can be useful for stacking
  very faint objects that are near the background level.

1.20.0a5 [2023-06-24]
* testing optional additional local sky and ffsky wavelength independent zeropoint offset shift
* testing separation of zeropoint correction (multiplicative) and sky residual
  + for this version, it is ncessary to add in fixed zeropoint correction on the command line (--zeropoint_shift)
* if the chi2 fiber fit for any of the top 4 fibers is > 10, set DETFLAG_QUESTIONABLE_DETECTION

1.20.0a4 [2023-06-12]
* added check for brightest single fiber being massively brighter than the next brightest (as weighted). This is an
  indication of a problem.
* added check for possible charge trap based on central column(s) of sky-subtracted (cleaned) image cutout
* fixed bug in cat_cfhtls, goods_n and egs that was skipping cutout collection when the catalog matches were zero
* update decals call to use DR10
* add waring to stdout, elixer.log, and to PDF report if --continuum flag not used with a continuum source or is
  used with an emission line source
* added extra check for blank region in PNG conversion where the 2D fiber cutouts should be (this is usually a spot
  where a PDF to PNG conversion can fail silently). Will retry conversion if that region is blank.
* fiber to PSF correction for 3.5" apertures and seeing FWHM 1.0 to 3.0 interpolated based on pre-computed curves
* added supoprt for --ffsky for zero point correction models
* added runtime configuration --zeropoint to toggle the per-fiber zeropoint correction

1.20.0a3 [2023-05-24]
* changed to interpolated models by PSF for per-fiber (zero point) correction

1.20.0a2 [2023-05-22]
* adjusted seeing fwhm translation model for per-fiber correction from linear to deg3 polynomial to fit the seeing less
  than the fiber width
    + default adjustment is None (options available for None, multiplicative or additive)
* default sky subtraction residual (zero point) is now model rather than the stack

1.20.0a1 [2023-05-18]
* in combine_continuum, use the IFU computed HETDEX glimit rather than the global average estimate of 24.5
  + limit low depth (g <= 24) imaging weights for aperture mags at limit, consider non-detects
* change default P(LyA) thresholds from 0.5,0.6,0.4 to 0.5,0.4,0.3
* adjusted spectrum_utilities quick_score to limit max considered SNR; was allowing overly broad fit with high SNR where
  chi2 was poor
* tweak the estimated g-limit just a bit to use the HETDEX effective lambda (4726) instead of 4640AA
* added another trigger for DETFLAG_QUESTIONABLE_DETECTION ... if 3rd fiber is unusually brighter than 1st fiber
* fix issue with Gaussian line fit parameters when ELiXer performs the fit. The y-level was input as the continuum (a
  flux density) but when plotting they can be in 2AA wide bins so, as shown appears to be off by a factor of 2. Corrected
  the parameter for y to be in the same binning.
* testing for HDR4


1.19.0 [2023-05-02]
* Fix to 1.19.0 for HDR 3.0.3 run

1.19.0a13 [2023-04-14]
* bumped max distance to curve for HETDEX match to imaging from 0.5" (0.75" for early data) to 1.25" (and 1.75")
* added interpolated, per wavelength bin modeled PSF neighbor deblending
* fixed skip of line fitting for elixer checked incompatible conditions when --fit_sigma is used
* changed report (line) FWHM = to $\sigma\ =
* small tweak to selection of fibers in spectrum_utilites::calc_dex_g_limit() to use 3900-5400AA rather than 3670-5342AA
  (only look over SDSS-g wavelength range for the fiber selection ... the gmag calc already only used the SDSS-g range)

1.19.0a12 [2023-04-07]
* added --fit_sigma as a tuple to force the fitted line sigma to be between the two values (i.e. ---fit_sigma 1.5, 10.0)
* fixed missing *2.0 for the 2AA binning on the Gaussian paramters for the the upper right figure when re-extracting
* change line removal from solution to be largest offset from the average offsets rather than the lowest score (this
  was a problem when multiple scores were the same, e.g. if all great lines and all score = 100.0 then you could end
  up removing all the lines until you happen to fall below the offset limit).
* changed (corrected) meanflux_density for --gridsearch to be the mean between the central wavelength +/- kms offset
  rather than the width of spectrum used in the fit. **NOTE** this is NOT continuum subtracted and is rounded to the
  nearest whole wavelength bin
* add optional --slurm command line parameter (1 = normal, 0 = make .slurm file but do not auto-queue it)
* add optional --delta_wave command line parameter. If used w/o --aperture and with --ra, --dec, optioanlly --shotid or
  with --coords and a wavelength is available, will attempt to find existing HETDEX detectIDs that meet the condition:
  within +/- (--search) of the RA, Dec, in the same shotid (if specified) and within +/- (--delta_wave) of observed wave


1.19.0a11 [2023-04-04]
* update gridsearch SNR to match the rest of elixer, added chi2 (over +/- 40AA)

1.19.0a10 [2023-04-03]
* update gridsearch timing

1.19.0a9 [2023-03-31]
* working on --gridsearch plotting issue

1.19.0a8 [2023-03-30]
* working on --gridsearch transpose/indexing issue

1.19.0a7 [2023-03-30]
* correct issues with mis-aligned and missing spectra from --gridsearch

1.19.0a6 [2023-03-28]
* special version ... add to SEP fixed aperture magnitude on imaging a convolution of the HETDEX aperture
 and HETDEX seeing fwhm as PSF



1.19.0a5 [2023-03-28]
* change --gridsearch to call hetdex_api get_spectra() with array of coords rather than one at a time (note: does still
  operate on one shot at a time)
* added G.LIMIT_GRIDSEARCH_LINE_FINDER (default = True) to reduce the line finder scanning to just the simple case on
  the gridsearch

1.19.0a4 [2023-03-27]
* add universal sky subtraction residual model


1.19.0a3 [2023-03-06]
* testing new HETDEX API get_spectra() with sky residuals
    + !! this version ONLY applies to get_spectra() re-extractions !!
* fix missing --ffsky option on HETDEX_API call to get_spectrum() (normal retrieval, not the re-extraction)

1.19.0a2 [2023-03-01]
* updated spectrum::get_best_gmag(), get_hetdex_gmag(), get_sdss_gmag() to fix handling when there are no flux errors provided
* various random_aperture updates (testing and sample building)

1.19.0a1 [2023-01-30]
* add new option for up to 3 different, configurable P(LyA) threholds; this is intended to allow for some flexibility
  in LyA vs OII thresholds depending on science needs (e.g. to rebalance contamination vs completeness as needed)
  This is configured in global_config.py and/or at run time with --plya_thresh

1.18.2a2 [2023-01-24]
* fix bug in spectrum::solution_consistent_with_low_z(); was using wrong index and could mark lines as missing when they
  are found
* add special handling for test against bright OIII-5007
* slight tuning of required line weights for Balmer series
* testing Flam slope vote .. for g < 23.5, fwhm < 1200 km/s, with negative slope < -4e-22 flux/AA and wave > 3950
 (needs more testing and tuning)
* testing EW + PLAE correction vote
* fixed missing threshold conversion on P(LyA)
* low voting weight extra vote set to the configurable threshold rather than fixed as 0.5
* allow troublesome lines (CIV,CIII,MgII) a lower threshold to trigger a classification on a weak multi-line fit with
  low P(LyA)


1.18.2a1 [2023-01-24]
* fix --coords shotid vs wavelegnth logic issue

1.18.1 [2022-12-26]
* add command line option to toggle P(LyA) votes on/off
* add optional apply_air_to_vac on spectrum_utilities shift_to_restframe_xxx()
* update spectrum_utilites shift_to_restfframe() and shift_to_restframe_flam() to use (1+z)**3 as more correct than
  (1+z)** 1 or 2
* define global_config CALFIB_WAVEGRID_VAC to be the vacuum shifted version of CALFIB_WAVEGRID and is populated once
  spectrum_utilities is imported
* split shift_to_rest_luminosity() into two funcs (1) shift_flam_to_rest_luminosity_per_aa() and (2) shift_flux_to rest_luminosity()
  to handle the differences between flux density to lum/AA and flux to lum.


1.18.0 [2022-09-27]
* drop alpha designation for jupyter-hub image update

1.18.0a4 [2022-09-27]
* fix old error overestimating the error on the DEX-g magnitude when averaginging direct spectrum mean and SDSS MC
* moved DEX-g effective wavelength to global_config and changed to SDSS-g (4640AA) from 4500AA
* for HSC-SSP zPDF fits, attempt to use HETDEX created .sid to locate HSC src_id instead of loading full fits
* default GLOBAL_LOGGING to False and set to True only on imports in elixer.py (users can still turn on by importing
  global_config.py first and then set to GLOBAL_LOGGING to True).
* add option (LOG_TO_STDOUT) in global_config.py to send log statments to stdout rather than the log IF GLOBAL_LOGGING
  is False and LOG_TO_STDOUT is True

1.18.0a3 [2022-09-14]
* complete --prefer_g option
* turn stack_cosmos back on by default (contains Laigle+2015 catalog). Note SHELA still off with HSC-SSP preferred.

1.18.0a2 [2022-09-13]
* limit blue end to 3900AA for gmag estimate to better coincide with SDSS g
* use ra,dec generated IDs to check for completion for re-extraction runs ... currently needs work for multiple shots
* add mag_g_wide, continuum_wide and their uncertainties to DeblendedSpectra table
* add --prefer_g option to select catalog match g band instead of r *** incomplete -- only implemented for HSC-SSP so far

1.18.0a1 [2022-09-09]
* fixed(?) issue where continuum from the emission line fit (from HETDEX and from elixer fit) was being reported as flux
  in the fit bins (so, normally in x2AA bins) rather than a flux density, or, in other words, as the fitted 'y' value.
  This made the narrow (line) fitted EW also wrong by a factor of 2. The wide fit continuum and EW (and combined estimates
  of both) were all correct and only the narrow (line) fit version was incorrect but was also not being used in the
  classifications, so was only a reporting issue.

1.17.0a8 [2022-09-08]
* add --deblend option to collect neighbor spectra and deblend from the target spectrum. Formerly part of --lyc, but is
  now a separate option. Note --lyc will automatically set --deblend. The displayed spectrum is still the standard
  HETDEX spectrum; the DeblendedSpecta table in the elixer hdf5 file contains the deblended spectrum.
* if no HETDEX ID is specified and no identifier is provided in --coords file, attempt to create an ID as a 15 digit value
   as '9'+ ra + dec where ra and dec are 7 digit integers in decimal degrees down to the 4th decimal place.

1.17.0a7 [2022-09-06]
* testing use of HETDEX_API detections HDF5 wrapper
* removed "detectname" column from elixer HDF5 Detections table as an unused column
* changed CFHTLS reported mag limit to be the published average limits + 0.5 (since we see about 0.5 deeper using 1" apertures)
  (note: was using fixed values of 27.3 for the deep imaging and 26.0 for the wide from g and r aperture 5-sigma tests)
* updated deepest imaging for neighbors to prefer g-band over r-band if r-band is not more than 0.2 mag deeper
* HSC-SSP photz catalogs (wide and deep, 3 different photz methods)
* Update photz solution score boosting to use zPDFs if available and boost based on area under zPDF near solution redshift
* Add dotted line for best multiline solution z (prior to figuring best_z) to lower-right zPDF figure when available and
  not already OII or LyA as the solution

1.17.0a6 [2022-08-17]
* updated size vote: if angular diameter > 9 and bright (< 21), favor OII (basically, large, bright and larger than cutout)
* update PLAE/POII: down weight for OII z < 0.05 where the low volume is a problem
* lower the limiting g-mag on elixer clustering to 21 (unless there are flags, then no lower limit)

1.17.0a5 [2022-08-17]
* replace fixed HETDEX gmag limit (was 25.0) with computed limit from the IFU + shot for each detection (using mean
  of "empty" fibers as a uniform background in a 3.5" radius aperture)
  + limit is optimistic and rounded UP to a single decimal
  + can specify on/off and whether to use the full IFU or just the amp(s) of the top fibers via global_config
    COMPUTE_HETDEX_MAG_LIMIT and COMPUTE_HETDEX_MAG_LIMIT_FULL_IFU (default is amps only)
  + added the computed value (or default) to the 4th text line in upper left as g=##.#


1.17.0a4 [2022-08-05]
* testing replaceing HETDEX gmag limit (was 25.0) with computed limit from the IFU + shot for each detection (using mean
  of "empty" fibers as a uniform background in a 3.5" radius aperture)
* renamed best_z and best_pz in h5 file to z_best and z_best_pz
* added "amp" and "multiframe" columns to h5 file Detections table
* added mag_g_wide_limit to h5 file as the computed HETDEX gmag limit (or 25.0 by default)
* if --nophot specified, cut the total run time by 1/2
* updated --nophoto to also turn of the web on-demand photometery (DECaLS, PanSTARRS, SDSS). Though they have their own
  switches, this is the more expected behavior for --nophoto


1.17.0a3 [2022-08-02]
* Project LineFlux Image to the WCS of the master_cutout (neighborhood) and stacked_cutout (main report) so the NorthBox
  matches; Added option (PROJECT_LINE_IMAGE_TO_COMMON_WCS in global_config.py) to turn this off and go back to the
  native LineFlux Image projection
* Allow hourangle format in --coords file
* Auto prepend (9x) and (000 - 999) to manual IDs in --coords file to allow for overlapping shots (if shotid not specified)
* Add --require_hetdex optional parameter. If present, will not generated report(s) unless HETDEX data is present
* Fix a few chi2 calcs that were using the SNR +/- 2 sigma range rather than the full fitted range
* Changed default GAUSSIAN_FIT_AA_RANGE for line finder from 20AA to HETDEX standard 50AA
* Fix --aperture bug when specified with a detectID (would except out and fail as was expecting --aperture combined with
  --ra and --dec). Will now allow --aperture with --dets and trigger a re-extraction for that detectID.
* updated line finders; removed old peakdet with scan for line shape; added (option) to evaluate each wavelength bin
  to fit a Gaussian (quick fit); updated curve_fit to attempt different cominations of line widths, flux arrays, etc
  to better find weak, normal, and broad lines
* updated WD classifier to specify DA or DAB, DB, or DQ and uses line width (sigma) to help distinguish from A stars
* fix typo in line ID matcher; was using too large a window (delta z = 0.05, was supposed to be 0.0005); switched to
  rest_AA matching as preferred at delta wavelength 8.0AA
* improved broad line fitting with multiple passes of increasing max_sigma, wavelength ranges, and with median filtering
   to help with absorption in broad emission; also includes attempt to detect emission as really continuum between
   two absorption lines,
* relax line scoring minium thresholds when the line is targetted as as supporting line (slightly lower scores are acceptable)


1.17.0a2 [2022-07-14]
* Add simple bad pixel check on emission line (very narrow with strong negative dip to one side), includes new flag

1.17.0a1 [2022-07-08]
* Replace emission/absorption line wavelengths with vacuum values (< 2000A) and air (> 2000A) with updated precision
* Apply redshift corrections to best_z based on observed wavelength to vacuum and orbital velocity
* Add explicit galactic dust correction to spectra (from h5 and from hetdex_api.get_spectra())
* Update compatibitlity check with lzg to weight the missing lines (not just count). i.e. if claim h_delta, it is REALLY
  bad if h_gamma and h_beta not found, but if claim OIII-5007, it is not that bad if OII-3272 not found (could be high 032
  and OII is weak))
* For compatibility checks, start at G.HETDEX_BLUE_SAFE_WAVE (3600AA) rather than 3500AA. Just too many problems in the
  deep blue.

1.16.8a2 [2022-06-22]
* update meteor logic to check flat means (no PSF) of individually stacked exposures for emission lines
* updated SEP object selection to also consider matching to DEX-gmag. Best selection is now closest (within ellipse or
  nearest to ellipse boundary) with compatible gmag. Nearest wins if next better gmag match is > 0.5" more distant.
* since CIII (1909) and CII (2326) are semi-forbidden and can be harder to see in AGN where CIV is quite strong, remove
  the requirement for AGN consistency check on CIV to see CIII and CII. However, if we pick up CIII or CII and this is
  an AGN, CIV should be strong, so make CIV a requirement on CIII and CII.

1.16.8a1 [2022-06-13]
* added a voting weight adjustment to down-weight line property based votes (FWHM, PLAE/POII, EW, etc) when the spectral
  line has really poor SNR or chi2. This effectively comes in to play ONLY when EliXer is asked to fit a line at a specific
  spot, so the normal SNR and chi2 cuts are not applied. This is not the case for the usual HETDEX provided detections.
* replace hetdex_api calls to get_flux_for_source() with fit_circular_aperture() (still using small fixed aperture though,
  updated from 1.0" radius to 1.5", and still at 5"-7" annulus for sky)
* update default HDR to 3.0

1.16.7a3 [2022-05-27]
* special release for HSC-NEP with commented out fields with bad WCS

1.16.7a2 [2022-05-13]
* Limit sibling line FWHM similarity sanity check enforcement to SNR < 5.7
* Update AGN consistency check to use line ranks in scoring
* Update gmag_vote_thresholds() to use HDR3 calibration
* Penalize Q(z) by x (1-low voting weight correction)
* Update DEX-g mag votes to reduce overall weight except where the EW is also extreme
* small tune to skx-normal estiamted run time
* reduce TACC runtime estimate if neighboorhood is not being generated
* boost simple line FWHM (sigma) vote. At exteme widths, vote can get 1.0 - 2.0 for LyA.(*note: though this could still
 be CIV, but that would be handled by the multiline solutions and clustering).
* limit straight EW vote by FWHM. If > 16.5, weight goes to zero, liner from 1.0 to 0.0 multiplier for 12 up to 16.5,
  else 1.0 (normal) multiplier. This helps deal with extreme FWHM lines getting a no LyA vote due to low EW of AGN.
* fix missing mag mismatch condition where DEX-g is much brighter than imaging limit
* do not boost OIII 4959+5007 solution to minimum score IF either line is rejected on better inspection due to extreme
  variation in x0 position
* added check of central 3x3 pixels in 2D fiber cutouts looking for excessive zero valued pixels (indicative of a mask
  for a bad column or charge trap, etc). If more than 30%, by fiber weight, are zero in the top 4 fibers, a flag is raised.
* allow larger velocity offsets between lines in a solution and their expected positions if the anchor FWHM is broad (> 15 AA)
  as there are few to zero OII this broad and these are genearlly AGN and the center fit is difficult and there can be
  internal absoprtion in the lines
* add possible planetary nebule (PN) detection if 5007 present (usually with 4959) and no imaging source matches. If
  this is the top solution, also receives a "PN" classification label in addition to DETFLAG_POSSIBLE_PN flag
* make pyhetdex import optional
* add --timex option to fractionally boost SLURM time
* fix bug where checking for SEP objects bombs if elixer apertures are used and there a NO SEP objects at all (not just
  that none were selected as the best). This creates a small bias away from LyA.
* Updated DEX-g mag vote to be a combined gmag vote
* allow CIII to be a solution
* if line is broad and the top multiline solution is below the minimum score but still above 15 and there are no other
  good options, vote for that solution rather than OII
* if line is broad and the multiline solution is below the minimum score and is for CIV, CIII, MgII, allow a down weighted
  vote for not LyA
* add fwhm_line_kms / _err to elixer.h5 file as a convenience
* restrict ew error and g-mag error for faint side non-detects in gmag vote
* fixed bug in best_z; can be LyA with low P(LyA) if multiline solution picks out broad LyA (AGN compatible)



1.16.7a1 [2022-04-12]
* Allow CIV + LyA (in solution_consistent_with_lae) and similar to have lower EW thredhold since may be AGN with lower
  EW (and over estimated continuum from the bandpass).


1.16.6 [2022-04-05]
* update smerge.py to detect timeout on merging and handle easier recovery (just re-run "sbatch elixer_merge.slurm")
* tweak spectrum::solution_consistent_with_lae() to be a little more leanient with scoring and allow for a non-vote

1.16.5 [2022-03-15]
* include whether elixer also detects the HETDEX line and if the maximum elixer found line is included in the solution(s)
  in the Q(z) logic.
* if we can't get a gmag continuum estiamte and the other estimates are negative and there are 2x negative bins as positive
  and the whole spectrum in negative, flag for review
* update H&K rules

1.16.4 [2022-03-13]
* add WD compatibility check
* fix missing OII-3727 requirement if OIII-4959 and OIII-5007 found
* fix coords file read if only one line
* allow re-extractions/forced extractions to turn on CONTINUUM_RULES
* further restrict meteor trigger. If possibly near a bright object and there is a strong, multiline solution with few
  to no unaccounted lines, remove the solution lines from the spectrum and then check to see if the remaining lines
  trigger a meteor condition.
* tweak title line for EW to be single digit float, capped at 9999.0
* fix missing imaging contributions to continuum
* add DETFLAG_POSSIBLE_LOCAL_TRANSIENT for meteors and satellite. Lower threshold to trigger. Meteor
  label made a higher threshold to trigger.


1.16.3 [2022-03-01]
* add continuum_masked as the continuum estimate from the DEX spectra with emission and absorption lines masked
  and restored the original continuum_wide as the estimate from the DEX spectrum as g-mag (band pass)
* fix issue where unselected SEP objects and unselected catalog matches (or too distant catalog matches) were adding in
  continuum estimates and where there should only be imaging non-detects
* change former P(LyA) disqualifiers to allow the classification to continue and just add a corresponding flag instead
* turn off bad pixel flat as a weighted vote. Will only add as a flag.

1.16.2 [2022-02-25]
* small update to the gmag continuum adjustment to re-measue with emission and absorption lines masked, then fall back
  on EW if that fails. For the EW, use the denominator as the "safe" red wavelength - blue wavelength instead of the
  full width.
* fixed but that was leaving the prob_noise = 1 for single line "multi-line" solutions where other lines are present
  but not fitted (and we use the summed flux method).
* small correction in comparing FHWM of lines when testing for compatibility with AGN or low-z galaxies

1.16.1 [2022-02-16]
* fix report and neighborhood if DECaLS fails to move on to PanSTARRS and SDSS (if allowed)

1.16.0 [2022-02-16]
* set version for HDR3 runs

1.16.0a5 [2022-02-15]
* turn off DECam (SHELA and stackCOSMOS catalogs)
* for *_mini.png, collect a sqrt(2) larger line image to handle any rotation issues. For main report and neighbors, still
  use smaller size with North box rather than rotate to the master_cutout WCS.

1.16.0a4 [2022-02-12]
* fix bad tile selection where tile RA crosses the 0/360 degree boundary
* added HSC SSP PDF3 object catalogs
* fix issue with mini's where in chain mode (not dispatch) the neighborhood map and line image are overwritten by the
  last run before the mini's are produced (so all get the same map and line image).
* add explicit high continuum, no strong emission lines vote for not LyA
* updated cosmology for PLAE/POII to use HETDEX consistent Planck18 values


1.16.0a3 [2022-02-09]
* update mini to add line image cutout
* use sytem call to convert PDF to PNG only if in dispatch mode and not on the jupyter-hub
* restore original scoring. Using EW_obs is unreliable at this time
* updated HSC SSP with PDR3 (imaging only; catalogs not yet added)


1.16.0a2 [2022-02-08]
* test of alternate scoring with observed equivalent width replaceing integrated line flux (use when have good continuum measure)
* overly broad line fitting requirements should not apply to absorption lines
* fix missing Line FWHM, EWr (w), etc on report for continuum objects

1.16.0a1 [2022-02-02]
* Adjust consitency check vs LyA to allow for un-fitted LyA at blue end (< 3700AA) when the anchor line is broad. If not
  found in line search, check the integrated flux at the expected LyA position +/- 2*sigma (of the sigma of the anchor line)
  vs the corresponding integrated flux of the anchor line. If similar and LyA is larger and the error is small, assume
  LyA is there, so no penalty, but only a very small score bump so can trigger AGN compatibility check.
* Adjust NV/CIV line ratio check to allow for NV > CIV (as sometimes happens).
* Allow the minimum sigma to fit in LSQ to float up from 1.0 in the targetted search
* Added a vote for LyA (really, a vote against OII) if the fit sigma is really broad (> 5.1 or FWHM > 12) with weights
  between 0.0 and 0.5 (have seen OII, rarely, up to sigma 7-8)
* set PDF to PNG conversion to use system call only. Experiment since pdf2image partial failures are more frequent on
  stampede2
* added combined_eqw_rest_lya and _err to elixer h5 Detections table
* set a maximum line score cap (to 100.0 for now). This prevents a solution that has been deliberately down scored by
  a multiplier penalty to still have an enormously large "good" score just becuase the emission line(s) in it are high
  SNR and bright
* added sliding PLAE/POII 50/50 value. Per Leung+2015, for z(LyA) < 2.5, use 1.38 and z > 2.5 use 10.3. For this version
  until we have a large trusted data set of Truth to test against, we always set to 1.0. This is temporary and will
  update as a linear or maybe sigmoid xlat based on experimentation. This adjusts the P(LyA) vote and the voting
  weight.
* deactivate hard EW vote ... too redundant with PLAE/POII and dilutes the PLAE/POII weight
* add in a 1-sigma (but minium of 3 wavebins) vote for flux asymmetry (red/blue flux) as 1sigma to either side of the
  line center (excluding the wavebin that includes the line center). If strongly red, votes for LyA. If blue, for OII
  (or really, just not LyA). Limited to SNR > 7.0.
* simplified physical size more angular size. Uses line FWHM if angular size is big to allow for possible AGN.
* added photometric magnitude rejection in combine_all_cotinuum when using maxed out elixer aperture and there is a
  bright, nearby SEP object and the aperture measure is 5x or more brigher than the DEX-gmag. Helps classify LAEs near
  bright foreground objects.
* change aggregate PLAE/POII vote to be strictly binary based on the midpoint; place all uncertainty in the weight assigned
  (since fore those near the midpoint, the weight goes to zero anyway, as a no-vote) [note: midpoint still at 1.0]
* change PLAE/POII weight sigma to 3x from 5x
* changed DEX-g voting from binary weight to sigmoid weight (up to 4x when brigher than mag limit and falls to (near) zero by
  0.1x past mag limit)
* changed combine_all_contiuum() to also drop deepest non-detect if that non-detect is fainter than the faintest positive
  detection (e.g. there is probably something wrong with the non-detect imaging).
* change PLAE/POII midpoint to vary linearly with wavelength, based on the hard binary condition in Leung+2015. Runs from 1.0
  at 4000AA to 10.0 at 4500AA and holds constant on either end.
* added back straight 20AA vote with low weight. Linear weight varies as distance from 20AA up to a max of 0.5 (min 0.1)
* use HETDEX_API config pixflat_dir for pixel flat in all HDR versions 2+
* fix to bright nearby fiber check to handle None
* fix to UNCERTAIN_CLASSIFICATION check when best_z has not yet been set
* add EW (combined) to top report line

1.15.0a4-x [2022-01-xx]
* experimental series ... small changes tracked in spreadsheet. Not intended for any release candidate.

1.15.0a3 [2022-01-14]
* fixed bug in checking SDSS redshift consistency with emission lines
* added Q(z) sanity check for possible AGN (as defined by a FWHM velocity > 1500 km/s)
* switch to use the mean of the SDSS gmag and the direct summed gmag from the DEX spectrum
  + the DEX only PLAE/POII also updated to use this to sample for the continuum estimate
* fix typo (long standing bug) in spectrum.get_hetdex_gmag in flux to flux_density that was ADDING in a 2.0AA
  rather than multiply by 2.0AA. Since sdss_g mag was being used until 1.15.0a2, this was not exposed.
* add correction to DEX-g (the average from SDSS-g and direct HETDEX spectrum) as the net sum of observed EW of
  emission (- absoption) as fraction of full width of spectrum. This is to help correct for the emission and
  absorption lines in the continuum estimate (the band pass mag is NOT modified). The effect is usually small (few %),
  and only larger for AGN or spectra with really broad lines.
* limit g and r OII/LAE mag zero point correction to wavelengths > ~4250 (LyA z > 2.5) per Leung+2017 (section 4.3)

1.15.0a2 [2022-01-11]
* tweak the contrast stretch on the line image to better match with hetdex_api
* flipped preference to use HETDEX spectrum gmag over speclite SDSS gmag. Set flag if difference > 0.5 and > uncertainty
  in the two measures. HETDEX spectrum tends to be brighter than speclite and seems to "fix" marginal PLAE/POII.
* add source extractor object large neighbor flag. If no multi-line solution, lowers the Q(z) to max of 0.4
* adjust down Q(z) if apcor is large


1.15.0a1 [2021-12-22]
* bump minor version number due to large number of changes over 1.14.x series (see 1.14.0a9)
* minor logging changes
* Update consistency check for 1.88 < z < 3.52 to check not only LyA, but presence of other required lines given the
  proposed solution lines.
* Update clustering to allow use of mean redshift even if no neighbor is sufficienly brighter than target if the stddev
  is tight.
* Tweak line scoring to penalize low SNR high sigma lines.


1.14.0a9 [2021-12-20]
* Always plot SEP apertures even if elixer circular apeture is used (e.g. if SEP too far from allowed distance)
* Only use estimated physical size IF there are qualified SEP detections (i.e. if the deepest g or r images have
  detections within the allowed maximum separation)
* If different imaging yields very different on-sky aperture sizes, only use the size from the deepest imaging (here
  using if the std > min(all apertures))
* Catalog and SDSS z matching, restrict phot_z (large z error > 0.1) to rank 3 and better line matches (spec_z allow
  rank 4).
* Catalog and SDSS z matching for single line solution only restrited to LyA, OII, OIII-5007 at any wavelength or MgII,
  CIII, CIV at specific wavelengths where they can be found "alone"
* Make OII rank 1 (was 2), MgII rank 2 (was 3)
* Update scoring and selection for catalog spec-z and phot-z match. Must come from "selected" counterpart OR within 1"
* If phot_z does not match an existing solution, it can only contribute to low-z vs high-z vote
* Fix error in 20AA hard cut (sanity) vote. Had both LAE and OII at vote = 0
* Resumed at single 1+z, mag zero shifting for OII vs LyA. Recalibrated mag zeros to 24.0 (g) and 23.8 (r) at z = 2.5 (LyA)
* For unspecified phot_z error, set z_err to +/- 0.25


1.14.0a8 [2021-12-15]
* fixed bug in solution_consistent_with_lae() [was using observed EW instead of rest EW]
* tweak physical size votes
* retstrict neighbors for clustering to have no critical flags


1.14.0a7 [2021-12-11]
* added ra, dec index on elixer h5 detections table for faster coordinate searches
* added clustering search for bright neighbors with different classification. Intended to find and correct high-z
  mis-classifications of outskirts of bright objects
* tweak OII/H_beta ratio ... OII must be 2x to 50x stronger than H_beta. Not sure about this change though.


1.14.0a6 [2021-12-08]
* update solution_consitent_with_lae() to also run if main line is LyA. Basically includes an additional assertion that
  the EW is consistent with LyA in the 20AA cut (with error and > 15AA).
* add extra 20AA hard cut vote (currently at 0.5 weight) for brighter than DEX limit g-mag and EW < 15 or > 25.
* (HSC-NEP) turn off tile B6 as identified with a WCS problem
* fix missing Dec correction in FITS footprint sanity check in science_image.py

1.14.0a5 [2021-12-01]
* adding explicit check for solution_consitent_with_lae() for when LyA is NOT the central line, but is one of the elixer
  found lines. Can return positve, neutral, or negative results.
* tweak external catalog phot_z and spec_z checks to enforce loose magnitude consistency with target along with distance

1.14.0a4 [2021-11-29]
* turn mag zero adjustment down to a single (1+z). The (1+z)**3 is way too strong.

1.14.0a3 [2021-11-23]
* working on consistency checks on external catalog redshifts. If inconsistent with HETDEX data, the external catalog
  redshift solution is downweighted.
* work around on pandas numpy float32 vs float bug

1.14.0a2 [2021-11-12]
* expand HSC NEP (by manual request only)

1.14.0a1 [2021-11-04]
* add in hetdex_api line images to cutout panel

1.13.3a5 [2021-11-04]
* revised non-detects in imaging contribution to P(LyA) to use only single deepest non-detect as continuum upper limit
* make LAE_G_MAG_ZERO, LAE_R_MAG_ZERO on scale, centered at z = 2.5 for  1.9 < z < 3.5 and tuning by 1+z such that the
magnitude is 0.20 brigher at z = 1.9 to 0.27 fainter by z = 3.5. Used to nudge ambiguous P(LyA) toward OII or LAE if the
object magnitude is brigher or fainter. Base values are 24.5 (g) and 24.3 (r)

1.13.3a4 [2021-10-28]
* update ff-sky column name to "calfib_ffsky" from "spec_fullsky_sub"
* fixed bug in weighted_biweigh introduced in 1.13.1.a3 (made data = NaN where error was finite ... should be where infinite)
* added "A=xxx" aperture correction at 4500 to upper left text panel
* rename catalogs: HyperSuprimeCam to HSC-DEX and HyperSuprimeCam_SSP to HSC-SSP nd HyperSuprieCam_NEP to HSC-NEP
* update for hetdex_api name change for extract() : "weights" to "apcor"
* start including hetdex_api phot_tools (for line images)


1.13.3a3 [2021-10-07]
* [HDR3 continuum test]
* Allow detection processing to continue if shot info not found in survey file. Use out of range values
  (i.e. seeing fwhm = 999, throughput = 0, etc) to trigger flagging errors

1.13.3a2 [2021-10-04]
* [HDR3 continuum test]
* add allowed versions for HDR3 (NOTE: Default still at HDR2.1 for now), so must specify --hdr 3 on command line
* added --check_z commandline option: Bitmask: 1 = Galaxy Mask, 2 = DEX-GAIA, 4=SDSS, 8=Local Catalogs.
  by default all are turned ON


1.13.3a1 [2021-09-22]
* renamed elixer h5 Detections table "plae_classification" column to "plya_classification"
* replaced elixer h5 Detections table "combined_plae_err" column with "combined_plae_hi" and "combined_plae_lo"

1.13.2a1 [2021-09-09]
* added LyCon project code from its spectrum_utilities to ELiXer spectrum_utilities for stacking and redshifting

1.13.1a5 [2021-08-26]
* Tweak to continuum estimates from imaging where we are at the mag-limit. Now assumes a 1-mag uncertainty and scales
  the weighting linearly from 0-1 over 24 to 25 mag. This is an attempt to better utilize non-detects when then imaging
  depth is deeper than 24 (and esp. deeper than 25) rather than just having a very large uncertainty.

1.13.1a4 [2021-08-19]
* Fixed bug where a numpy.add opertation included a multiplication by None. Was in try/catch but still segfaulted.
  In cat_base.stack_image_cutouts().
* Minor revision to elixer.prune_detection_list() for recovery to also auto-check the --neighborbood --png and --mini
  switches and check that those pngs are also present. If the switch requests a png that is not found, the detection
  will be re-run.


1.13.1a3 [2021-08-12]
* fix bug that was assigning max flux as the wavelength if no suitable emission line could be fit (should have been the
  wavelength with the max flux, not the max flux).
* for continuum source, check continuum around the emission line and if the line is not 1sigma or more above, then
* spectrum_utilities code for Lyman Continuum project

1.13.1a2 [2021-08-05]
* add two letter AMP code to the Primary
* add --special to activate in-code special behavior (currently just (1) turn of all catalog z checks). Intended only
  for experiment and debugging.

1.13.1a1 [2021-07-29]
* adding in extra table in h5 (NeighborSpectra) for use with --lyc. Contains the spectra (if available) and other information
  on HETDEX detection neighbors for use with Lyman Contiuum project (specfically, in deblending)
* fixed bug in ExtractedObjects where the RA, Dec was reported incorrectly (the pixel offset into the WCS was being sent
  in as a offset in arcsec)

1.13.0a8 [2021-07-27]
* update specified central wavelength with MCMC fit wavelength for elixer re-extractions (does not apply to HETDEX detections)
* added --mcmc option to force MCMC fit for all LSQ fit lines if LSQ fit SNR > FORCE_MCMC_MIN_SNR (4.0 by default)
  --NOTE: this also increases the estimated TACC SLURM time by x4.0
* added chi2 column to SpectraLines h5 table
* switched to standard chi2 for line fit (stopped using dof=3 == #fit -1))

1.13.0a7 [2021-07-21]
* reduced the standard spectra range to fit to the central peak +/- 20AA (was at 50AA and was failing to find some noisy
  lines).
* added explicit check for H&K lines as a separated double Gaussian for continuum objects (HETDEX definition) or emission
  line objects where g-band magnitued is brigher than approx 20 AB (5e-17 cgs at 4500AA f_iso)

1.13.0a6 [2021-07-19]
* fixed bug where fitted line flux error for extra lines did not get the scale (1e-17, usually) and 2AA applied
  so as reported in SpectraLines table, the error could be (by units) in the 10s or 100s instead of e-19 - e-17 or so.

1.13.0a5 [2021-07-06]
* update SNR bin definitions

1.13.0a4 [2021-07-01]
* SNR on line fit set to use +/- 2 sigma
* updated bundled emcee to version 3.1.0

1.13.0a3 [2021-06-30]
* trigger blended spectra flag if 2 or more source extractor objects within central 1.5"
* trigger uncertain classification flag if single line 15 < EW < 25 and mag ~ 24
* fixed tab alignment that was skipping red_vs_blue (pesudo color calculation)
* refined catalog phot-z vs spec-z matching. Restrict to lines that can be single line solutions IF there is no matching
  multiline solution already. Tweaked boost scale and factor for error on the z. Add in the line_score of the (central)
  matched line.

1.13.0a2 [2021-06-16]
* bumping alpha number as a checkpoint

1.13.0a1 [2021-06-15]
* working on adapting classification to continuum catalog sources
* allow MCMC Gaussian to fit aborption lines (negative A); restrict initial walker positions to valid ranges for each
  parameter to be fit (i.e. sigma cannot be negative, mu cannot be negative, for emission A must be positive (for absorption
  A must be negative)), etc
* align elixer SNR definition to base HETDEX definition. There will still be some variation (+/- 1 or 2 pixels in the noise
arrray and small differences in MCMC line flux fit) but they will be close.
    SNR = fit lineflux/sqrt(sum(err**2)) over line center +/- 4 sigma
* sped up neighborhood search (was missing the shot downselection)
* if --continuum specified, auto set DISPLAY_ABSORPTION_LINES and MAX_SCORE_ABSORPTION_LINES
* allow central (anchor) line to be an absorption line
* updates to Q(z)
* multiline solution scaled score now translated to a confidence (as probability) ... currently manually mapped (will
  change to map based on scaled_score to confirmed z test)
  + elixer h5 file "multiline_prob" is now this map and not the scaled_score
* fix very old bug in spectrum::raw_snr() that selected first wavebin only and not the whole range

1.12.0a1 [2021-05-20]
* add explicit flux 5007/4959 check to the special OIII case (to allow a nudge to OIII 4959+5007 when the weaker line (4959)
  is not successfully fit). This does not always work with known OIII emitters (the flux ratio check sometimes fails) but
  the classification usually still succeeds with the usual multiline fit checks).
* add explicit flux check (as above) to galaxy mask check. Will not accept 4959 as solution IF it does not pass the OIII
    3:1 flux check. (example: 2102421773 at RA, Dec 210.540436 +54.042873, near-ish to M101 but IS NOT OIII-4959)
* activate DETFLAG_UNCERTAIN_CLASSIFICATION check (for weak to moderate multi-line solution that does not match best_z
  and suggest CIV,CII,MgII,OII, or OIII-5007) ... the top LyA contaminants
* add explicit check in cat_hsc for catalog nan flux values (where the HSC object catalog flags are not set)

1.11.0 [2021-05-11]
* promoted to release for HDR2.1.3

1.11.0a12 [2021-05-11]
* Added fixed aperture photometry on all SEP objects (radius set in global_config.py SEP_FIXED_APERTURE_RADIUS)
  + includes new columns ("fixed_aper_xxx") in the ExtractedObjects table
* Add science_image check for "empty" or "bad" for stacking neighborhood cutouts. Only stack images of the same, "best"
 (largest) pixel counts (e.g. from the same instrument).
* Restrict filter colors (u-r, u-g, g-r) to fixed aperture on source extractor objects from same instrument/survey

1.11.0a11 [2021-04-28]
* Changed global LyA rest from 1216AA to 1215.67AA, OII from 3727.0 to 3727.8
* Add a correction for r-mag to g-mag based on an assumed UV Beta slope (G.R_BAND_UV_BETA_SLOPE, -2.4) for using r-band
  to estimate continuum for LyA equivalent width
* Add photometric filter colors to Detections table (color_ur, color_ug, color_gr)
* Add P(LyA) votes for g and r magnitudes; zero (or 50/50) point set in global_config: LAE_?_MAG_ZERO
  if the EW_rest(LyA) is between the LAE_EW_TRIGGERS (15 < ew < 25) by default
* changed overlapping tile selection to be the tile with the largest minium distance from an edge (assumes roughly
    rectangular coordinates and ignores RA curvature correction for DEC, given the tiles are usually at nearly the
    same DEC)

1.11.0a10 [2021-04-22]
* changed labelling of Primary IFU (3rd line in the top left text block) to report SpecID_SlotID_IFUID
* Add flagging system (printed top center on report and new "flag" column in Detections table)
* Changed catalog counterpart listing to combine across all catalogs and sorted (initially) by distance
  (Previoulsy displayed only the top 3 by the single deepest catalog). Duplicates (by position) -- keeping the one with
  spec_z (if available), phot_z (if available), and smallest magnitude uncertainty
* Add "selected" column to CatalogMatch (ELiXer choosed best match based on alignment with SEP ellipse and magnitude)

1.11.0a9 [2021-04-13]
* Changed science_image annulus sky subtraction limit and allow any change to aperture magnitude; changes > 2 mags are
  logged with a warning but allowed to continue. May result in aperture mags being set to mag-limit.
* Fix bug for empty cutout position where fiber_locs was not handling extra ifux, ifuy
* Missing weight for OII (with MgII) in spectrum::solution_consistent_with_agn()
* Limit multi-line solution consideration to scale-scores > 0.7


1.11.0a8 [2021-04-08]
* Attempt full line scan to find central wavelength if not provided and the simplified scan only if the full scan fails
* Add optional 5th column to --coords file to specify a numeric (integer) ID to name the detection on a forced extraction

1.11.0a7 [2021-03-29]
* Populating "image_depth_mag" in elixer h5 "Aperture" table
* Added "image_depth_mag" in elixer h5 "ExtractedObjects" and "ElixerApertures" tables

1.11.0a6 [2021-03-22]
* Incorporate catalog phot-z and spec-z into solutions
* Build a primitive P(z), z based on the multi-line solution best z and consistency with P(LyA)
* Add new columns to Detections table: best_z, best_pz and bumped version to 0.3.0
* Allow all rank 3 lines to be solution anchors (except NV)
* Allow down-scoring of emission lines based on identification. (i.e. NV downscored to 25% to avoid confusion between
  LyA+NV and OII+complex at 3800AA)


1.11.0a5 [2021-03-11]
* Added SDSS z-catalog () as redshift check for any/all imaging surveys. Not explicit to SDSS.
* Changed cat_base::is_edge_fiber() to use the IFUx and IFUy position instead of nominal grid of fiber IDs
* If emission line (or additional lines) are in a sky line window and have a width (sigma * 1.1775) that does not clear
  the edge of the sky line, cut the emission line scoring in half as it *could* just be the sky line. Stong lines would
  escape the edge or still have a high score, weak lines could fall out.
* fix assignment of HETDEX detectID for re-extraction if HETDEX detectID is supplied (dispatch case)

1.11.0a4 [2021-03-04]
* Added 20AA EWr cut sanity check for low-z OII ( <~ 0.1) (or LyA <~ 2.4) where PLAE/POII seems to give odd results.
 There might be an issue with the spatial volume at low-z (the LAE volume / OII volume rises very fast below
 z(OII) < 0.1 and explodes by z(OII) < 0.04).
* Still perform local sky subtraction on an image cutout aperture if the counts are negative (the local sky may be
  oversubtracted and negative too).
* Add 20AA sanity check when aggregating for P(LyA) for OII low-z < 0.1 where PLAE/POII has issues with the luminosity
  functions and vast and rapidly growing volume differentials between low-z (OII) and high-z (LAE)
* Fix bug that was not generating the fiber positions cutout for the mini (zooniverse) png following the re-organization
  of the catalogs in version 1.11.0a1


1.11.0a3 [2021-02-21]
* Add galaxy_mask. Detections found within galaxy mask are flagged and if a redshift matched emission line is found, are
  re-scored to boost solution.
* fixed bug when inverting PLAE/POII (if set to zero) for weighting
* Allow conintuum estimtates at or below flux limit to still go into aggregation as the flux limit with 100% error

1.11.0a2 [2021-02-11]
* Tweak P(Lya) physical size for high-z 25 to 40 kpc to vote from 0.5 to 0.1 (linearly ) and weight 0.1 to 1.0 (linearly)
* Updated pandas required version to >= 1.1.0 in setup.py
* Removed auto change of ALLOW_EMPTY_IMAGE to True if all web service options are turned off
* Tweak unmatched line scores to down-weight lines blueward of 3700 (lowers penality for unmatched lines blue of 3700AA)
* Added low P(LyA) voting weight check. Insert 0.5 valued votes at 1.0-sum of weights to bring weight to 1.0 (encourages
  move toward P(LyA) == 0.5 for exceeding low voting weights).
* [check point] given to O.Chavez for NEP testing

1.11.0a1 [2021-01-29]
* Major update to catalog organization to allow for inclusion of filters across multiple catalogs in report
    toggled by global_config::BUILD_REPORT_BY_FILTER
    All filters reported in elixer hdf5 file and up to 6 filters shown on the report (favoring bluer and deeper bands)
* Add separate CFHTLS catalog
* Add (restricted use) HSC NEP catalog
* Fix mis-reported (0") distance to circular aperture center from HETDEX position when aperture allowed to drift
* Apply meteor flux ratio multiplier if dither norm is overly large
* Do not check for meteor if object position is off the IFU (the individual exposure triggers are unreliable)


1.10.1a5 [2021-01-18]
* DECaLS web request layer (name) change. Was "dr8" now "ls-dr9".

1.10.1a4 [2021-01-13]
* changed out of range dither norm from 2.0 to 3.0 per re-evaluation
* add GLOBAL_LOGGING to global_config.py ;
    to turn off all logging:
    > import global_config
    > global_config.GLOBAL_LOGGING = False
    > import catalogs
    ...

1.10.1a3 [2020-12-17]
* Lowered HSC (for HETDEX) survey depth to full limit to 26.0 (25.5 at 5sigma for 2")
* Corrected default --recover behavior for selixer since --recover (True) is now the default option


1.10.1a2 [2020-12-16]
* Add extra checks in PDF to PNG conversion (filesize sanity with retry)
* Improvements to broadline matching with MgII
* Add 10 second connect and 120 second (get) timeouts for DECaLS


1.10.1a1 [2020-11-13]
* add dashed red lines to the mini png plots to indicate the top cutout as a zoom of the boxed section of the
  bottom imaging cutout, better aligned top edge, widened top right border (and filled in gap)

1.10.0 [2020-11-05]
* HDR2.1.2 curated re-run

1.10.0a8 [2020-11-04]
* still check for (in)consistency with AGN, LzG, etc even for weak solutions BUT do not allow the solutions to gain score
  (except for OIII 4959+5007)
* small meteor adjustments
    +try to avoid picking up on bright objects just off the edge of the detector
    +skip if the dither normalization is bad
    +if only one single bright meteor common line, must also have 80% of full spec ratio to trigger


1.10.0a7 [2020-10-30]
* tweak line scoring to divide snr by sqrt(bins) where bins is the number of wavebins over which a median filter was
  run when allowing for a noisy, broad-line fit (to account for smoothing)
* only include lines 3550 < wave < 5500 when checking for (solution) unmatched lines
* use 1.0" as max distance to ellipse (if outside the ellipse) for aperture matching for shots after 2018-06-01 and
  1.5" before
* correction for OIII solution (4959+5007) boost (was missing prob_noise correction if raising to minium score)
  + add enforcement of more restrictive +/- 2AA error in position between 4959 and 5007 in line fit
* correction to weak-low-z scores (the weight drop-off in P(LyA) voting should be more pronunced)
* tuning LAE physical extent (major axis diameter) weights

1.10.0a6 [2020-10-21]
* allow --hdr (HDR_Version) to be a string (not just a float) (but for compatibility with hetdex_api, keeps only
    Major.minor)
* do NOT zero weights for high error continuum IF there are 2 or fewer estimates (was causing cases where the PLAE/POII
  (aggregate) was being forced to 0).

1.10.0a5 [2020-10-16]
* fixed "/data" path from KPNO and HSC meta data (now replaced in all cases with the appropriate, dynamic basepath)


1.10.0a4 [2020-10-05]
* add distance to barycenter under photometric cutouts (as s:#.#") and changed mag: to m: to save space
* correct matched (multiline) solution EW_r to use the wide continuum estimates if available
* fix missing re-try for broadline if solution fails with no emission line info object
* added two more meteor emission lines
* [pending, residual calculation is far too expensive, need to store in a FITS or Db and just read at runtime]
  add optional parameter --sky_residual (also requires --ffsky and --aperture) to subtract off left over sky residual for
  the specific shot when re-extracting on an aperture (note: can be CPU time costly)
* fix bug where scoring penality for unmatched lines was not being re-applied after a poor fit (dx0) line removal
  score correction
* move "meteor" label as first if multiples are applied
* made "meteor" label lowercase to be consistent with others
* re-tuned physical size and gmag vs fwhm to be a little more aggressive
* added multiline solution sanity checks
    + solution cannot consist solely of rank 4 or weaker lines
    + stronger rank lines must be within 50% of sigma (line-width) of weaker anchor line (modified by the allowed
      "broad" status of the line)
* change elixer.h5 file "multiline_prob" to be the scaled solution score for the top solution (0-1) as more meaningful
  than just the base probability that the line (and the solution) is random noise
  (bumped h5 version to 0.2.5)
* MgII solution can receive AGN consitency boost but not the 'agn' label (as more likely just a lower-z object with
  strong outflows)

1.10.0a3 [2020-09-22]
* add specific check for 3:1 ratio OIII 5007/4959 (allow comparison even if potential 4959 line is very weak and boost
  solution score to minimum if ratio is a fit)
* adding in broadline fitting (very experimental)
* allow specific lines to be very broad

1.10.0a2 [2020-09-10]
* fixed issue where args.shotid would be (correctly) overwritten with per DetObj shotids, but when running --gridsearch
  at the end, only the last shotid was available in args.shotid. Now uses DetObj specific shotid first and then
  falls back to the ORIGINAL commandline shotid if the DetObj shotid is invalid.
* added --known_z command line parameter so caller can set a fixed z for the solutions (solutions w/in z +/- 0.05 are
  considered)
* remove explicit restriction against rank 4 emission lines as possible solutions (still require at least one additional
  line)
* adjusted the SLURM auto run-time setting to better fit with --gridsearch (based on the gridwidth and step size, but
  does not know about multiple shots)
* add shot seeing (FWHM), Throughput, and dither Normalization to 4th line of upper left text

1.10.0a [2020-08-31]
* explicit check for NaN in lineflux and continuum for PLAE (MCMC)
* check for identical 2D spec cutouts in top 3 fibers
* check for grossly negative spectrum (less than 10% of wavebins with positive flux), mark as spurious
* add global option (PIXEL_FLAT_ABSOLUTE_BAD_VALUE) to use an aboslution pixel flat bad pixel value instead of the
  (usually 3x, set by MARK_PIXEL_FLAT_DEVIATION) standard deviation
  + pixelflat wells now defined as EITHER the center mean being less than 85% (MIN_PIXEL_FLAT_CENTER_RATIO) of the median of the rest
    OR the center mean being below the PIXEL_FLAT_ABSOLUTE_BAD_VALUE
* check for completely negative spectrum and not invert (flip min and max so orients correctly)
* add magnitude check for LyA in hetdex::aggregate_classification (basically as g-mag brightens from 23.5, the line fwhm
  must get increasingly large (e.g. like an AGN) to not get LyA probability squashed down
* allow MgII (2799AA) to be an single line solution
* allow CIV (1549AA) to be a single line solution
* mark pixel flat pixels in red if below the threshold even if they are masked
* allow (re)extraction of an existing HETDEX ID (pass the detectID as before with --aperture switch)
* framework for line ratio comparisions and consistency with various objects (AGN, OII emitters, Stars, etc)
    + when active, will probably bump minor version number
* added some rank 3 emission lines as single line sol (for AGN) if their fwhm is large (12+AA) and they are in an observed
    wavelength range where we might expect to see only that line (because other lines are not in ranger or are weak)
* added detection for meteors (if exactly one exposure significantly above the others and shows the 4 or more possible lines
    then is marked as possible meteor)
* add classification_label to spectrum object and to elixer HDF5 file
* restored missig call to peakdet in spectrum.set_spectra
* changed --gridsearch to use (more robust) spectrum.peakdet instead of spectrum_utilities.simple_fit_wave and fall back
  to simple_fit_wave if there is a failure in peakdet
* fixed error in peakdet that would only merge in other detected lines IF peakdet also found a line (if it did not
  it would return no lines found)
* force re-extraction on existing HETDEX detect IDS if --aperture supplied on command call
* add --ylim option to command line arguments so can force the 1D spectrum plot limits (for exploration)



1.9.1 [2020-08-06]
* promote to 1.9.1 (HDR2.1) - redeux
* fix for issue with pixel flats no longer being flipped for config 0/1 issues (due to missing
  AMPNAME or AMPLIFIE in pixel flat headers ... previously was using science fits header for this
  purpose, but that info was no longer relevant to the h5 shot files which handled the flips on
  ingestion).

1.9.0 [2020-07-21]
* promote to 1.9.0 (HDR2.1)

1.9.0a20 [2020-07-13]
* added --broadline parameter to specify use of the HETDEX broadline catalog. In future versions, ELiXer may auto-swap
  catalogs based on the HETDEX detectID prefix, but for now the switch is manual and singular. The neighborhood map
  feature does check all three catalogs at this time.
* changed logic for --neighborhood_only if --aperture also provided. Since --neighborhood_only specified, will
  not perform a forced extraction and will produce only a single neighborhood map (with the top place where
  the forced extraction would have been set to zeroes)
* updated default HDRVersion to 2.1

1.9.0a19 [2020-07-07]
* if there are multiple shots for a forced extraction only produce reports for those with available
  spectra (good status DetectionObjects) OR exactly one (without the HETDEX data section) if there
  are no good status DetectionObjects (i.e. so you do not get multiple, effectively duplicated reports
  with just the imaging cutouts of the same RA, Dec)
* added small "ff" label to upper right of fullwidth 1D spec when fullfield sky subtraction was used
* replaced elixer.h5 Detections table "seeing_gaussian" and "seeing_moffat" with (single) "seeing_fwhm"

1.9.0a18 [2020-07-06]
* still produce imaging cutout section of main report if the forced extraction fails (i.e. if there is no
  matching HETDEX shot, etc).
* add (brightest) single fiber magnitude for fibers adjacent to the detection fibers on the CCD, and single central
  fiber magnitude as possible flagging for scattered light (i.e. if CCD neighboring fiber is bright (< 23?) and the
  central fiber is much fainter, there is a good chance of scattered light contributing to the detection
* always add explicit (forced) extraction (if performed) as the top entry for neighborhood map
* add "ffsky_subtraction" boolean to elixer.h5 Detection table (True IF fullfield skysubtraction was used on spectrum)


1.9.0a17 [2020-07-01]
* fixed bug in spectrum::peakdet that returns a None instead of empty list []
* improve specturm_utilites::simple_fit_slope() to clean the input data for NaNs and INFs
* allow --id (if less than HETDEX detectID value) to specify the start of the internal ID numbering
* fix --gridsearch naming convention of .py and .pickle to match the ELiXer pdf_name
* allow --gridsearch to have parenthesis on command line (commonly typed that way)
* fixed needless reloading of shot file when already loaded for another fiber
    (still slightly inefficient in that a different exposure will trigger a file load, but not memory duplication)


1.9.0a16 [2020-06-29]
* added check for no returned idx (no emission line fit) in spectrum_utilities::make_raster_plots
  + changed 'intflux' to 'fitflux' (as this is a fitted (model) flux not an integrated flux)
  + added 'meanflux_density' (as sum over flux bins / wavelength range)
  + added wavelength fit range to titles
* update neighborhood map to include suptitle with total count and entry titles with wavelength

1.9.0a15 [2020-06-26]
* don't enforce 'empty image' restriction on SDSS
* add spectral_slope, spectral_slope_err to cat.h5 file Detection table
* add --lyc switch to produce Lyman Continuum focused version of ELiXer report
* changed P(LAE) label at the top to P(LyA) (to reduce confusion with P(LAE)/P(OII))
* fix PDF part merging for just imaging cutouts (no HETDEX part)
* tweaked spacing (made text to right of 2D fiber cutouts 5 lines (split up the DatevShot_exp) and dropped labels

1.9.0a14 [2020-06-24]
* add max of fiber chi2 (+/-2 pix from fit wave center) to left of 2D fiber cutouts. Color text as 'red' if > 4.0.


1.9.0a13 [2020-06-23]
* add velocity offset to --gridsearch as 3rd parameter
* fix documentation and side->radius conversion in catalogs.py get_cutouts() to correct for removal of
  1.5x boost to radius in collecting image cutouts

1.9.0a12 [2020-06-16]
* incorporate update to hetdex_api and add fiber weights to forced/(re) extractions

1.9.0a11 [2020-06-11]
* allow --coords file to flip the 3rd and 4th columns (shotid and wavelength), by assuming that values 3400 to 5700 are
  wavelengths (in AA) and not shotids (very limited logic and very little error checking)


1.9.0a10 [2020-06-10]
* add --ntasks_per_node switch to explicitly override the per host system default for TACC SLURM runs
* add limited support for --recover mode for explicit (re)extractions
* make --recover mode default ON for SLURM (can override and force off with --no_recover)
* enable (basic) HDR 2.1 (allow --hdr to set a float or int value)
* fix unhandled mag limit for KPNO as g-band supplement to HSC
* fix bug where (forced extraction) --aperture + --coords + --neighborhood_only  would not generate neighborhood map

1.9.0a9 [2020-05-31]
* Do not build out a report if fibers are not found (may be a filesystem problem) AND we are in --recover mode (so that
  on the next run, this report will be re-attempted). Implementation is a little wasteful, but is setup to allow for
  a special (future) generation of the report anyway, but flagged s|t  --recover will work.

1.9.0a8 [2020-05-29]
* add KPNO g-band to HSC (r-band) where coverage overlaps (was already contributing to PLAE/POII, but now explicitly
  add the KPNO cutout image to HSC catalog reports)
* fix issue when --aperture is larger than --error (was rescaling the cutout image w/o making a larger cutout, so the
  underlying WCS became incorrectly scaled). Now will force the cutout size to adapt to the --aperture IF the --aperture
  is larger than the requested cutout size

1.9.0a7 [2020-05-28]
* turn off use of bid catalog object continuum estimates from the combined continuum estimate as it is (1) a mixing
  of probabilities (that the HETDEX object is an LAE + that each bid object is the HETDEX object) and (2) even using
  the "best" matched object causes a double contribution of continuum (ostensibly the aperture measure and the catalog
  object measure are the same, or, at least come from the same data source (the photometric image))
* add a Gaussian weighting to the combined PLAE/POII as applied to the aggregate PLAE classification that sets the
  weight to 0 for PLAE/POII = 1 and is Gaussian to either side with sigma = 5.0 (set in globals PLAE_POII_GAUSSIAN_WEIGHT_SIGMA)
* fix issue in --coords file to handle shotid as a float
* expand --coords file with optional wavelength as the 4th column (use 0 for omitted shotid and/or wavelength)

1.9.0a6 [2020-05-25]
* reduce weight of possible catalog matches to continuum estimate by the ratio of the nearest object to the current distance
  to emphasize the nearest object and down play those farther away
* updated with HSC release 3
  + changed catalog magnitude from "best" selection to an average of lsq, cmode, kron3.5, and flux17.0 (~3" aperture)
  + add 'image_flags' to ElixerApertures and ExtractedObjects tables (distinct from 'flags' which are tied to the
    aperture extraction). These 'image_flags' are tied to the image pipeline and are defined per each catalog.
* add (limited use) --gridsearch command line option (interactive or non-interactive) to perform a grid search on
  the specified range and step size around the RA, Dec and wavelength. Produces 3 types of plots (3D interactive,
  2D contour, and 2D meshgrid) for each of integrated flux, velocity offset (from the given wavelength), and continuum.
  Increases SLURM time by 3x (on average).

1.9.0a5 [2020-05-19]
* tweak rmse central pix position to be the center of the array IF the FWHM of the fit is greater than 1/2 width of the
  array
* added spectrum_utilities raster search and plotting options
* updated scoring for really broad lines (i.e. AGN) and corrected unmatched lines error for LyA

1.9.0a4 [2020-05-18]
* boost allowed line fit FWHM to 40AA, but require SNR > 25 for FWHM > 20AA
* check for 'pdftoppm' then 'convert' to execute system PDF to PNG conversion


1.9.0a3 [2020-05-06]
* changed spectrum::find_central_wave to optimize for total line_score instead of just integrated line flux
* disallow (turn off) RECOVERY MODE (--recover) for forced extraction (e.g. if --aperture specified)
  [note: forced extraction IDs are not unique across instances so current recovery mechanism cannot track them]
* make --blind the default behavior (so the switch is essentially meaningless now). Added --not_blind to negate the
  behavior and force pre-validation of passed in detectIDs
* fixed catalog get_stacked_cutout() for KPNO, DECaLS, PanSTARRS and SDSS (to use base function)
* fix naming error for *nei.png and *mini.png for forced extraction (was just <local id>nei.png and is now
    <fullname>_nei.png)

1.9.0a2 [2020-04-28]
* added --coords commandline parameter to specify a file listing RA, Dec, shotid triples (whitespace separated) to use with
  dispatch (SLURM) mode and with or without specifying --aperture
  + if --aperture specified, then perform explicit extraction at RA and Dec
  + if --aperture NOT specified, find nearest HETDEX detections to RA and Dec (within specified --search or --error)
    - in this case, the shotid is ignored and can be excluded from the file or set to 0 or other value

1.9.0a1 [2020-04-23]
* added option for forced re-extraction (--aperture --shotid) plus (--ra --dec --wavelength)

1.8.3a4 [2020-04-21]
* tweak combined_continuum to favor the wide-spectrum g-band IF it is brighter than 24mag (gets 4x weight which makes
  it roughly equal to combined weight of the other measures, but does NOT modify the variance, so smaller error
  measures still win out)
* tweak the physical size PLAE weights just a bit to boost to center (0.1) at weight (0.1) if the high z physical size
  is 30-40 kpc (so slightly favor OII) and (0.5) at weight (0.1) if 10-30kpc
* fix bug where PLAE/POII (upper left text block) was not being displayed if the narrow continuum results in an invalid
    PLAE/POII (even if the wide continuum estimate is good)
* add option to catalogs.get_cutouts (allow_bad_image) to toggle return of cutouts that may be corrupt or empty
* fix error where failure to combine PLAE/POII at the end results in no report
* fix issue in catalogs where web catalogs would not be checked if any other catalogs matched the coordinates (even if
  the image cutout was None)
* remove check for duplicate central pixels (1.8.3a2) as there are valid cases where this can occur
* fixed extent rescaling issue for DECaLS in the neighborhood map (where DECaLS "original" size is reported as the
  entire image size, not the cutout size vs the other catalogs where it is the cutout size). This caused the image
  display extent to be tiny and the tick marks and positions (other than 0,0) were very wrong
* fixed bug in KPNO where imaging base path was not getting updated correctly (if it moved)
* updated default (non-ELiXer call) HETDEX Data Release version to 2
* set faint mag limit of 28.0 (configurable in global_config.py) when at flux limit for imaging catalogs
* changed minumum allowed unique pixels in cutout to 70%
* added median, (negative) std from zero, skewtest to image "good" check
* added marking of pixels more than x sigma (3 by default) from the mean in a pixel flat in red (see global_config.py
  MARK_PIXEL_FLAT_DEVIATION)
* small improvement to scaling (uses interior 2/3 of image to set zscale contrast rather than whole image)

1.8.3a3 [2020-04-15]
* updated elixer HDF5 file to version 0.2.0: Must upgrade any 0.1.x and below before merging
    + added to Detections: spurious_reason (string 32)
    + added to ExtractebObjects: dist_curve (float32)
                                 dist_baryctr (float32)
* fix spectrum::unique_peak(), should be checking from the fit position, not the baseline search position
* update hetdex::combine_continuum to kick out "outlier" continuum estimtes If there are 4 or more estimates
    (using biweight loc and scale and rejecting (like a sigma clip) estimates 1.5+ away from biweight avg)
    then perform standard inverse variance averaging (objective is to remove very low reported error but
    outlier measures and prevent them from dominating the average)

1.8.3a2 [2020-04-10]
* fix error in source extractor ellipse effective radius (was reporting the starting ciruclar radius, not
  the computed
* when computing combined continuum estimate, disregard estimates whose error is larger than the measurement
* enforce non-empty cutout before calling source extractor
* add unique pixel check to cutout (must have > 10% unique pixels to be considered usable) [configurable in
    global_config.py as FRAC_UNIQUE_PIXELS_NOT_EMPTY]
* add zero value pixel check to cutout (must have more than 2/3 non-zero value pixels) [configurable in
    global_config.py as FRAC_NONZERO_PIXELS]
* added check for bad pixel flat to push down aggregate PLAE; if more than 50% of fiber weight with bad pixel flat,
    the plae_classification is set to -1 (spurious)
* added check for duplicate central pixels in top (usually 4) displayed 2D fiber cutouts (if found,
    sets plae_classification to -1 (spurious))

1.8.3a1 [2020-04-02]
* explicitly trap NoOverlap error so it does not generate an exception report in the log

1.8.2 [2020-04-01]
* promote to release, set as HDR2 baseline

1.8.2a6 [2020-03-21]
* HDR2 Testing

1.8.2a5 [2020-03-20]
* pull base config paths from hetdex_api, where possible.
* HDR2 testing (allow in-direct query from multi-fits HDF5 Fiber table via FiberIndex table
  if the Fiber table is not indexed on multiframe)
* Protect against changed or missing columns from HDR1 to HDR2 (Detections.detectname,
       survey.fwhm_gaussian, survey.fwhm_moffat)
* Update default HDR version to 2

1.8.2.a4 [2020-03-13]
* added in basic multiline solution penalties for unmatched lines, still needs tuning
* updated filter to cgs flux conversions to use approximate filter iso instead of emission line wavelength

1.8.2.a3 [2020-03-11]
* check nearby (+/- 10AA from line center (+/- FWHM) for similarly size peaks ( > 0.9 * peak); if found, suggests peak
    is lucky hit inside some noise and gets down weighted
* turn off some scoring penalties and bonuses from old line fitting specific to LyA (since now applied to all lines)
* added SNR peak finder (augment to existing peakfinder)

1.8.2a2 [2020-03-06]
* use faint mag limit of 29 to calculate an approximate variance for contiuum measures below flux limit

1.8.2a1 [2020-03-03]
* physical size condition for LAE vs NOT LAE
* changes to upper left panel

1.8.1 [2020-02-29]
* reworked directory structure
* merge into master (start prep for HDR2)

1.8.1a8 [2020-02-29]
* added function for bootstrapping to get confidence interval from skewed distribution (i.e. from MC PLAE/POII data)
* added function for explicit direct confidence interval from skewed distribution
* added catalog bid target matched object(s) continuum estimate  (same catalog and filter, if center w/in 0.5" of
    best aperture center)
* update git directory structure for easier packaging


1.8.1a7 [2020-02-20]
* 1st generation: combine PLAE/POII (excluding catalog match) and then combine with spatial extent and multi-line
    solutions to make a single classification call (PLAE or not)
* corrected (fairly small) bug in sdss gmag to continuum conversion
* set (generous) mag limits as a safety catch

1.8.1a6 [2020-02-12]
* add high and low PLAE/POII error range to all report PLAE/POII positions (default 68% confidence interval)
* removed unnecessary double read of some photometric images (as left-over from Python2/astropy memory problem)
* minor clean up
* minor update to selixer (parameter tweek for --ooops module)

1.8.1a5 [2020-01-30]
* add in --hdr optional parameter on command line to specify which HETDEX Data Release version to use. If not specified,
    the current default is used.
    + also add in constructor parameter for CatalogLibrary() to specify which version to use (default is system default)


1.8.1a4 [2020-01-29]
* Update multiline solution score to use a scaled_score based on weighting scheme (including the solution score, the
    fraction of the total score, and the probablity that the solution is "real" (composed of "real" lines))
* Fix bug in PLAE/POII error calculation when flux or continuum are (erroneously) negative

1.8.1a3 [2020-01-23]
* Add MC-style error to PLAE/POII to ALL PLAE calls
    + wrapped D.Farrow LineClassifierPro.source_prob() (keeping setup across calls for performance)
    + repeated random sample lineflux and continuum from Gaussian (assuming errors are Gaussian and independent (though
      that is not strictly true)) over configurable number of tries (default = 1000)
    + take Biweight location and confidence interval (configurable, default 95%) as PLAE/POII and error
* (minor?) updates to --ooops for wrangler and stampede2 in SLURM script


1.8.1a2 [2020-01-17]
* add in DECaLS web-based imaging, used much like PanSTARRS and SDSS
    + includes --decals command line option (0,1,2 = disallow, allow, force ... just like PanSTARRS and SDSS)
* updated catalogs::get_cutouts(...) with new allow_web parameter. If True, will check, in order (DECaLS, PanSTARRS, and
    SDSS) to get cutouts IF the supplied local catalogs did not return any cutouts
* fixed bug in elixer::build_neighborhood_map(...) where the returned cutout (manifest only for DECaLS, but could be possible
    for others) is smaller than request (but without an error). The extent was still set to the requested size, so the
    coordinate grid would NOT match the actual image and positions would be off. An explicit check now corrects the
    extent to match that of the returned image cutout. (Currently only fixed in neighborhood where the extent could be large
    and not yet checking in catalog cutouts where the extent is typically only a few arcsec). Note: for DECaLS the issue
    occurs at extents greater than 67 arcsec on a side (256x256 pixels at 0.262 arcsec/pixel scale)
* allow neighborhood to be generated even if the elixer call did not produce any HETEDEX detections (i.e. if an RA, Dec
    only was on the call and no detections within search window). File name will be the supplied --name

1.8.1a1 [2020-01-16]
* add zero reference line to Gaussian and full-1d plots
* flip upper left labels (Entry#-> ID and Dectect ID -> Entry#)


1.8.0 [2020-01-13]
* promote 1.8.0a3 to 1.8.0


1.8.0a3 [2019-12-13]
* repeat calls to generate PLAE/POII for range of EW values (nominal, min, max) and report in HDF5
* changed sky annulus for sky-subtraction from 5x-10x to 2x-4x of the aperture radius (for ~12x sky pixels to aperture pixels)
  (was previously far too large, letting in broad gradients and increased chance of bright stars/wings)
* added in per catalog average FWHM and using that as default aperture size + 0.5" for HETDEX astrometric error
* added in "ratty" line fit check (broad sigma, but moderate or low SNR) to exclude adjacent noise as emission line detections
* added NUDGE_MAG_APERTURE_MAX_DATE (20180601). If observation before this date, can nudge the aperture center up to
  NUDGE_MAG_APERTURE_CENTER amount to nearest Gaussian peak. If after this date, center remains fixed at detection coords.
* fixed bug in NUDGE (science_image::update_center) which was using the aperture radius to mask the Gaussian peak finder
  region on the cutout instead of the allowed play (NUDGE) radius
* add distance for point to ellipse and check for point in ellipse (for use with source extractor elliptical apertures)
* add option (current=True) to use source extractor instead circular aperture (fall back on aperture if source extactor
  fails). global_config USE_SOURCE_EXTRACTOR
* always run ELiXer circular aperture (as configured) and choose "best" between it and sextractor;
  record all calculated apertures in HDF5
* add command line switch --upgrade_hdf5 to upgrade an ELiXer HDF5 file to newer version
* new table (ExtractedObjects) in HDF5 file
* new table (ElixerApertures) in HDF5 file
* made naming more uniform in column names in HDF5 file (now version 0.1.0)
* minor lable change under imaging. Aperture radius (circular) marked as "rc" and effective radius of ellipse as "re"


1.8.0a2 [2019-11-20]
* changed background of _mini.png to dark gray (0x1c1c1e)
* add "low" to set_io_param for ooops in SLURM file

1.8.0a1 [2019-11-12]
* new parameters to catalogs::get_cutouts ... filter and first
* new interface to catalogs get_filters()

1.7.5a12 [2019-11-10]
* fixed non-standard multi-line solution NOT showing labels on matched lines to the solution
* allow option on HDF5 catalog extension (append_entry) to skip existing entries OR overwrite with
  newer row(s)
* fixed error where HDF5 SpectralLines table was incrementing sol_num with each emission line found
  instead of with each solution
* add explicit notation to Gaussian fit plot and full 1D spectra to show /2AA bins

1.7.5a11 [2019-11-07]
* Clarify when PanSTARRS and SDSS are allowed and enforce condition on neighborhood build. Alert user at runtime if auto
  configuration has disallowed PanSTARRS or SDSS.
* added red and blue pseduo color fluxes (and error, and ratio) to ELiXer HDF5 (0.0.3)
* allow ELiXer HDF5 merging if differ in only engineering version
* temp merge_unique addition to deal with column changes from 0.0.2 to 0.0.3 in ELiXer HDF5



1.7.5a10 [2019-11-06]
* Tweak to favor display flag emission line solutions over non-display (if top solutions are close in score)


1.7.5a9 [2019-11-05]
* Added --merge_unique switch to merge exactly 2 ELiXer HDF5 catalogs, keeping only the most recent detectid
  if there are duplicates

1.7.5a8 [2019-11-03]
* Updated HSC bid target selection to include multiple condition enforcement per HSC README to
  eliminate duplicates and unreliable detections

1.7.5a7 [2019-11-01]
* update --mini option (black background, neighborhood image, re-organize)
* changed HSC magnitude order: lsq,3.0,model
* changed max PLAE/POII from 999 to 1000 to avoid confusion with common non-value
* implementing pseduo-color from HETDEX calfib spectrum (red_vs_blue)
  +  pseudo_color, pseudo_color_min, pseudo_color_max, pseudo_color_flag added to ELiXer HDF5 Detections table
  + global_config option (DISPLAY_PSEUDO_COLOR) to display pseduo_color in upper left text block


1.7.5a6 [2019-10-28]
* fixed failure of imaging cutout if magnitude does not calcuate properly or mag info is not available


1.7.5a5 [2019-10-24]
* option (global_config::ALLOW_SYSTEM_CALL_PDF_CONVERSION) to allow a system call to pdftoppm if Python conversion of
  PDF to PNG fails

1.7.5a4 [2019-10-23]
* changed --neighborhood to only mark "all" HETDEX neighbors in the first image. Each subsequent image shows only
  the center detection (+) and the current neighbor (red box)


1.7.5a3 [2019-10-22]
* fixed missing return in science_image::get_cutout() if cutout collected is None or empty

1.7.5a2 [2019-10-10]
* fixed error in HDF5 catalog creation (bad DetObj::detectid ... should be hdf5_detectid)
* fixed issue in cat_goodsn (pandas dataframe value needed for mFDa4_z_weight
* additional logging for None cutouts in neighborhood

1.7.5a1 [2019-10-02]
* added KPNO imaging (does not yet have catalog). Not sure the aperture photometry mags can be trusted yet. Currently,
  points to John Feldmeier's TACC work directory.


1.7.4a2 [2019-10-01]
* fixed missing (2AA) division for estimated flux uncertainty when reading from Gaussian fit parameters (vs straight
  from HDF5 file) (*note: 2AA value is read from Gaussian fit paramter as well)
* added verify boolean to catalogs::find_catalogs() to actually verify a cutout exists at the RA, Dec (returns list
  of matching catalogs ... can be slow since it actually verifies the imaging files on disk and performs a cutout)
* replace Wand with pdf2image
* minimal y-axis scaling of neighborhood spectra plots, set box and neighbor detected emission line color to 'lime'
* added HDF5 catalog output
* turn off disc in pixel flat, made configurable in global_config with MARK_PIXEL_FLAT_CENTER



1.7.4a1 [2019-09-19]
* Updated with new HSC data release (new format, 2x coverage)
    -image organization different (now <...>/tract/image_file)
    -catalog organization different (now <...>/tract/<position>.dat
    -catalog format different (98 columns now from 20)
        -using flux.cmodel and flux (least squares fit) as preferred
    -FITS format different
            -WCS idx now 0 (was 1)
            -flux zero point not reported in header (specified as fixed in the README)
            -exposure time not reported in header
            -others ....
* Added option to output an "ELiXer-lite" single image (as <detectid>_mini.png) ... uses --mini switch (independent
  of --zoo)

1.7.3a1 [2019-09-17]
* fixed: COSMOS catalog only reporting r-band mag/PLAE
* fixed: allow (solution = False) lines IFF there is at least one corroborating line
   (allows CIV, etc for LyA solutions)
* replaced red + at center of imaging cutouts with open crosshair
  (leave the fiber position cutout with the "+" as the more exact position is useful for that graphic)

1.7.2 [2019-09-12]
For manual classification effort.
* Aperture photometry set to fixed 1.5" at 0,0 position for consistency with previous runs.

1.7.2a8 [2019-09-11]
* Mark all (in range) HETDEX detections (continuum and emission line) in neighborhood map with white squares and
the current (row) with blue. Includes detections that exceed the configured limit.

1.7.2a7 [2019-09-09]
* Add absolute (001-448) fiber number to left side of fiber 2d cutouts (to make it easier to note common fibers in
  detection)
* Added check of continuum sources (in addition to emissionline source) for neighborhood if hdf5 file not specified
* Added visual warning text to top center ("summed pixel flat cell") if duplicated fibers were found

1.7.2a6 [2019-08-22]
* Add low alpha (0.2) gold disc to pixel flat 2D cutouts to highlight the emission line region (to check for defects)
* Add --nodes to commandline to set a maximum node limit on TACC (if not set or set to zero, the cluster specific
  configured maximum is used)


1.7.2a5 [2019-08-06]
* Removed "Est OII rest-EW" from catalog matches at report bottom
* Added uncertainty calcuation for SDSS (HETDEX) gmag estimate (uncertainty on the sum of all flux bins)
* Added '*' marker to gmag value in upper left for the EstCont line to indicate that the continuum estimate and error
  comes from the SDSS gmag instead of the HETDEX local estimate (occurs when HETDEX estimate is <= 0.0)
* Added uncertainty on catalog Est LyA EW (when possible)
* Added LyA rest EW (as EWr) and P(LAE)/P(OII) (as PLAE) underneath each cutout that computes an aperture magnitude
  (just for reference; due to space constraints the error is not calculated and shown)
* Search HDF5 detection file directory for the shot (multi_fits) file first, if not there, then go to the default location
* Correct uncertainty propagation in filter flux for individual catalogs


1.7.2a4 [2019-07-31]
* Add (in parenthesis to upper left panel) gmag based PLAE/POII ratio. This is in the PDF only and is not part
  of the catalog.
* Fixed bug in spectrum.py calling peakdet that forced list of additional (unlabeled) lines to always be empty
* Added elixer::build_neighoborhood_map() to scan all HETDEX detections within a provided distance and plot a wide
  imaging cutout and 1D spectra for each


1.7.2a3 [2019-07-22]
* Using 3-sigma clipped std dev from all fibers in top 4 amps/exposure contributing fibers to detection as noise
  estimate (in 2AA CALFIB wavebins)
* Update shading to be 5x noise (configurable in global_config.py) in full 1D spec plot
* Update line scoring to use this noise estimate
* Ignore certificate errors for PanSTARRS
* Add sanity check on imaging footprint from WCS (confirm WCS coord footprint produces the correct number of pixels
  allowing for some error). If not, do not use the footprint as check for coordinates in range of image.

1.7.2a2 [2019-07-11]
* Fixed scaling issue in full 1D spectrum where central flux bin value is small compared to adjacent flux bins
  (i.e. flux nearest to fit line peak drops to small value ... almost like a double peak with a single bin separation)
* Fixed error allowing alternate emission line to match primary line if calcuated z slightly negative (> -0.01)

1.7.2a1 [2019-07-11]
* Incorporated calfib errors into peak finder scoring. Line score modified by peak central flux / error at that position
  up to a max of 3x (where multiplier is flux/error/3.0, so at 3 sigma, multiplier is 1x).
* Mark 3-sigma in shaded region on full 1D spec plot
* Mark in red, regions of spectrum above the 3-sigma limit (option in global_config.py)
* Bumped up base time for stampede2 SKX nodes from 0.8 to 1.0 minutes (using ooops slows down processing a bit and
  the occassional call out to PanSTARRS also adds overhead).
* Restrict Pan-STARRS to non-dispatch calls (like SDSS)

1.7.1a3 [2019-07-07]
* Added in Pan-STARRS online query. Takes priority over SDSS. Has same options under --panstarrs command line parameter
* Added optional (default True) enforcement of non-empty catalog image. If image is empty or a simple gradient, will
  treat as a catalog miss and move on to the next or backup catalog (including Pan-STARRS and/or SDSS)
* Added --allow_empty_image command line option to override the above option and accept a blank image within the
  catalog footprint as acceptable
* Changed logger instantiation to prevent imported 3rd party modules from logging excessively


1.7.1a2 [2019-06-23]
* If continuum estimate from HETDEX is zero or undet, use SDSS gmag as basis for continuum estimate (still uses
  HETDEX error estimate)

1.7.1a [2019-06-21]
* Switched from using Andrew Leung base PLAE/POII code to Danial Farrow's version (with some modifications)
  (note: some small differences in specific values of ratio, but high level of agreement)
* Improved lineflux, continuum and equivalentwidth uncertainties passed to PLAE/POII code for:
    + HETDEX values
    + Aperture values (partial ... has lineflux uncertainty but not continuum uncertainty yet)
    + Catalog values

1.7.0a [2019-06-14]
* add SDSS online query as backup to no overlap with local imaging catalogs (default disallow if in dispatch mode to keep
  from overwhelming SDSS webserver)
* discontinued use of wcs._naxis1, _naxis2 per astropy 3.1 and replaced with pixel_shape
* fixed handfull of log.warn() calls (should be log.warning())
* updated science_image to force sky_mask to be cropped to the sky_image boundaries (in some cases the mask could
  extend beyond the image and then the sky pixel selection would fail)
* updated aperture photometry in GOODS-N
* updated aperture photometry in EGS
* set minimum PLAE/POII to 0.001
* added --nophoto option to explicitly turn off the use of the archival photometric catalogs (will only generate the
  top (HETDEX) part of the ELiXer report)
* added --png option to save the entire report as a PNG (independent of existing --jpg option, so can save in both
  formats on the same call)
* tweaked zoo filenames to be more consistent with HDR1 naming
* added speclite gmag using SDSS2010-g filter to upper left plot data
* minor spacing correction for --zoox option
* Updates to aperture magnitude:
  + added NUDGE_MAG_APERTURE_CENTER option to global_config to allow the photometry aperture center to shift
    (within NUDGE_MAG_APERTURE_CENTER) to the local 2D Gaussian centroid
  + added MAX_SKY_SUBTRACT_MAG to ignore local sky subtraction if the impact to the base aperture magnitude is
    greater than MAX_SKY_SUBTRACT_MAG
* added --fitspec option to allow the y-axis of the full width spectrum plot to grow to the max range of the spectrum
  rather than limit it to the selected emission line
* exclude additional lines from scoring if the lines position offset (velocity offset) is greater than a configured value
* allow asymmetric position (velocity) offsets and split LyA from other lines in scoring additional spectral lines
* added --continuum switch to instruct elixer to use the HETDEX continuum catalog instead of the emission line catalog
* OMP_PROC_BIND seems to be no longer valid for stampede2 (so stopped including it in pre-python command line)
* fixed error in elixer::convert_pdf ("strip" should be "rstrip" to remove trailing ".pdf" from name ... else treats
  as set of characters to be removed from anywhere in the string
* fixed missing application of scale units to MCMC results (usually e-18 not e-17) .. made expected line_flux and continuum
  appear to be off by x10
* added uncertainties to FWHM, SNR, and Chi2
* added small y-separator to 2D fiber cutouts (separate the sum from the individual fibers)


1.6.6 [2019-05-16]
* changed manual wcs header creation (science_image.py) to use new constructor to build from FITS header
* fixed non-printing of aperture P(LAE)/P(OII) (specifically for HSC)
* added filter ID to aperture P(LAE)/P(OII) in PDF report
* added check for duplicate fibers in HDF5 Fibers table (extra duplicate fibers are excluded, original is kept)
* fixed incorrect and overly restrictive passing of additional fluxes (of defined, known emission line type) to
  Bayesian classifier (still enforces that the multi-line solution ID possible line and the line must be within 2AA
  of a Bayesian known line)
* updated matplotlib ymin, ymax to bottom, top per deprication warning
* fixed several 2018 (that should be 2019 in the version log below)

1.6.5 [2019-03-31]
* report newer (panacea) equivalent width in *_cat.txt
* fixed minor type cast of id in PDF constructor
* extra protection around PDF report and part building

1.6.4 [2019-03-29]
* fix blank printed column 20, 23 in _cat.txt if no additional found lines reported, but one or more
  specific line matches found

1.6.3 [2019-03-28]
* added protection against attempting to convert a non-pdf to jpg
* added conversion of detectID from string to int type if --blind option used
* added extra protection for out of bounds sky mask on local sky subtraction annulus
* added minimum loading of CPUs before adding another node (default avg of 10 detects per CPU) on TACC
* added hard maximum number of detections to run per CPU (by machine and queue). If exceeded, selixer will
  exit and instruct operator to reduce the number of detections
* set HDF5 pdf names to just be the 9+ digit detectionID + ".pdf"


1.6.2a1 [2019-03-27]
* added elixer_mag, elixer_filter, elixer_flux, elixer_flux_err columns to dataframe when calculating and
  sorting by distance prior (so will be available as common columns in catalogs API)
* reworking selixer batching to allow for different performance with Python3 vs Python2
* updated user's guide
* updated default HDF5 detection file path
* added --blind option to not verify detection IDs for HDF5 reading when building the dispatch lists (speeds up
  pre-processing enormously at risk of including bad IDs ... does not work if passed in --dets are anything other
  than HDF5 detection IDs)
* reduced stampede2 SKX-Normal to 45 cores per node (from 48)
* add file existence check and 5 sec sleep if not found when coverting pdf to jpg
* add --ooops to selixer
* cut max number of nodes on stampede to 50

1.6.1a1 [2019-03-15] -- merge to master
* major rework of imports to allow for elixer to be installable as package
* various updates to switch between string/byte handling for python2 vs python3
* added documentation

1.6.0a5 [2019-03-14]
* removed import and calls to Andrews's Bayesian PLAE/POII which necessitated cosmolopy so can eliminate hard
  python2 dependencies
* support python2 or python3 versions of ConfigParser (configparser in python3)
* update binding for stampede2 normal queue (KNL nodes) ... limit to 6 tasks per node and a max of 50 nodes

1.6.0a4 [2019-03-13]
* add better protection on add empty fiber list cutout (formerly unhandled exception in rare case where we have
  entries in the detection HDF5 but no shot files and not overlapping photometry)
* trim stampede2 time estimate down to 45 sec per report


1.6.0a3 [2019-03-12]
* launch tasks with mpiexec.hydra for stampede2 cluster
* reduced max time per task (if using --recover) as it is easier to continue on timeout if underestimate time

1.6.0a2 [2019-03-11]
* fixed missing process of --dispatch for HDF5 consumption with --dets as entire shot


1.6.0a1 [2019-03-09]
* added --recover option
  Reorganizes elixer.py to execute to completion one detection at a time (rather than all detections in stages)
  If --recover is on the command line, ELiXer will first check the expected output directory for reports that
  match the list of detections to process. Any that are found are removed from the list. The anticipated primary use
  case is a run of many detections that ran out of time on TACC. Now, some subset of the reports will be complete and
  they user can re-execute the sbatch command directly (or even re-run elixer) but only those detections for which a
  PDF report does not exist will be processed.

  If --recover is NOT on the command line, all detections will be processed and the files overwritten in the original
  all or nothing process (that is, all detections are processed in stages and are all written out only at the end).
* added --search option to split out from --error. Use is exclusively with --ra and --dec and specifies the search
  radius in arcsecs. If not supplied, --error is used instead. This allows for a wide search area but with still a
  small (as defined by --error) cutout window.


1.5.0a25 [2019-03-07]
* modified line_classifier.probs.classification_prob_leung.py to return -1 PLAE/POII ratio if calc
  number of OII and LAEs are both zero (e.g. the priors will be zero).
* Made use of MCMC Gauss fit of additional lines contingent on global_config.py MIN_MCMC_SNR. If set
  to 0 it will NOT perform that additional step (and just uses the scipy least-squares fit)
* added 'fibidx' for SHOT HDF5 (if fails, uses 'fibnum' instead)
* updated imaging paths to point under hetdex HDR1 directory

1.5.0a24 [2019-03-06]
* fixed missing call to elixer::get_hdf5_detectids_to_process is RA, Dec not supplied (selixer.py)
* explicitly clear matplotlib at top of each cycle of HD object processing (elixer.py)

1.5.0a23 [2019-03-04]
* fixed typo in match_summary.py that failed to separated the header text for columns 29-33
  (the columns are present but the header text was not separated and numbered correctly)
* fixed missing filter (column 29 .. was printing a space) for aperture magnitude (e.g. the first row
  or 0.0 distance entry in *_cat.txt)
* fixed 0.0 value for aperture magnitude (was not being set) in *_cat.txt for the first row (aka
  the 0.0 distance entry)


1.5.0a22 [2019-03-04]
* updated cat_HSC and cat_SHELA to handle aperture magnitude calculation from 1.5.0a20
* changed sky pixel averaging from median of 3-sigma cut to biweight

1.5.0a21 [2019-02-25]
* fixed SLURM dispatch issue going from --ra and --dec to --dispatch and --dets

1.5.0a20 [2019-02-25]
* updated the catalogs API to allow operator to specify an aperture for a magnitude calcuation and whether that
  aperture is dynamic
* updated the catalogs API to take radius as arcsecs rather than degrees (though if less than 0.5, will assume degrees)
* fixed bug in calcuation of sky subtraction annulus (outer radius) into pixel space
* updated --ra --dec --error on command line to search for HDF5 detections and perform full ELiXer report on each


1.5.0a19 [2019-02-20]
* bumped local sky annulus for forced aperture photometry to 5x (inner) to 10x (outer) of the aperture radius
  (roughly 75x more sky pixels than source pixels) ... makes very little difference in magnitude (order 0.1 - 0.2 mag)
  (I think becuase the images are already well sky subtracted)

1.5.0.a18 [2019-02-19]
* fixed left-over 'sci_image' reference in cat_xxx.py count_to_mag functions
* add HDF5 support (path to multi-fits still hardcoded)
* scale upper right (model fit) plot to the central 50% of the datapoints
* explicitly cast x and y data to scipy.curve_fit as np.float64 to deal with precision issue in scipy implementation
* moved bin width (for flux vs flux/dx) as part of Gaussian parameters to track model area vs actual line_flux separately


1.5.0.a17 [2019-02-03]
* updates to selixer.py to deal with (minimum func) wrangler and stampede2
* added API for imaging catalogs (cutouts and catalog detections)
  + add cut2fits.py as command line python app to save cutouts as FITS
* reworked catalogs to minimize memory usage on loading larger FITS for imaging cutouts and add retries


1.5.0a16 [2019-01-02]
* incorporated Daniel Farrow's version of the Bayesian line discriminator (currently calling both versions and logging
    a warning if there is a > 1% discrepency between them)
* including line flux and eq.width uncertainties in calls the Bayesian discriminator for HETDEX data (not yet including
    uncertainties from external imaging catalogs as (1) do not have error frames and (2) assuming Poisson error at
    the pixel level might not be appropriate)
* fixed error in propogating line flux and continuum uncertainties into equivalent width uncertainty if using local
  MCMC fit
* updated SLURM wrapper to allow for maverick or wrangler
* fixed missing columns in dataframe for stack_cosmos (was missing the FLUX_AUTO and FLUXERR_AUTO) to add per filter
  flux to the catalog


1.5.0a15 [2018-12-14]
* changed IFUSLOT_ID back to SPECID in the text to the right of the 2D cutouts (the multi*fits are named starting
  with the SPECID so that makes the file easier to find)
* dispaly (top left) SpecID and SlotID of the primary fiber's IFU
* added command line option --include_all_amps which overrides the Bad Amp List and forces all amps to be processed
* fixed string representation of value +/- uncertainties for small exponents (upper left text)

1.5.0a14 [2018-12-13]
* if aperture magnitude fainter than global_config::SKY_ANNULUS_MIN_MAG, then compute local sky in 2x radius annulus
   around the original source, subtract sky and recompute magnitude
* add DS9 x,y back to the data to the right of the 2D CCD cutouts (top center),
  changed last line to be IFUSLOT_ID AMP Fiber_Index  (was SPECID AMP Fiber_Index),
  and made font black for all data
* add support for bad_amp_list (consists of ifuslot amp start_date stop_date)
* fixed typo in header for *_fibs.txt (was not printing the 16th column header correctly as the number of fibers)

1.5.0a13 [2018-12-10]
* fixed bug for non-measured continuum and reporting of P(LAE)/P(OII) in cat_shela

1.5.0a12 [2018-12-07]
* made photometry aperture fixed at 1.5" (not yet configurable on command line, but is set in global_config.py)
* switching preferred filter to compute continuum estimate to r-band
* fix missing SNR (col 13) in *_cat.txt

1.5.0a11 [2018-11-28]
* corrected error in hetdex.py load_fluxcalibrated_spectra (wrong column being used for sigma from fitres *.res files)

1.5.0a10 [2018-11-13]
* added fullname / PDF name to catalogs as 1st column
* if fcsdir is provided and the final node directory is an rspxxx output, will build PDF filename from the dirname

1.5.0a9 [2018-11-08]
* changed entry ID to allow it to be a string (if just numerical, will still treat as an integer)
* hetdex.py::load_fluxcalibrated_spectra deal with l1,l6 files of only one line (ndarray.size issue vs len())

1.5.0a8 [2018-11-08]
* changed search for an entry ID from the fcsdir detection file path to use the last token that is an integer

1.5.0a7 [2018-11-07]
* removed Sky X, Y (weighted X,Y of the source in the IFU) from *_fib.txt
* added IFU X, Y (X,Y of the center of the fiber in the IFU) for each fiber in *_fib.txt

1.5.0a6 [2018-11-06]
* adjust rspxxx Gauss fit of line flux by 2x (pixels to angstroms correction)
* replace upper right dataplot as scatter with error vs line with error

1.5.0a5[2018-10-25]
* use local *.res (if fails, check for ../fitres/*.res (hetdex::load_fluxcalibrated_spectra)
* incorporate AMPLIFIE or AMPNAME for additional flip logic for pixel flats
* more work on ANNULUS


1.5.0a4 [2018-10-19]
* updating for changes to rsp output
* moved initialization of logger to after check for --help
* fixed summing problem with Cutout2D.data in catalogs get_stacked_cutout
* added global option to use (or not) ELiXer internal MCMC fit for main line and uncertainties


1.5.0a3 [2018-10-17]
* allow --fcsdir directory building with --dets to continue if individual directories are bad
* changed upper right panel to display best Gaussian fit instead of summed fibers if fit parameters are available
* added Subarau HSC g-band COSMOS image to stackCOSMOS catalog
* zero out regions in 2D CCD cutouts where pixel flat is < 0

1.5.0a2 [2018-10-10]
* updated to new rsp1xx output (*specf.dat), remove *spece.dat
* use internal MCMC for uncertainties
* working on incorporating per wavelength noise model for simulated noise only spectra


1.5.0a1 [2018-08-30]
* support for stacking empty fibers (diffuse/extended emission search)
* adding in --annulus, --wavelength


1.4.0 [2018-08-11] promoted version 1.4.0a11 to release to avoid active user collisions

1.4.0a11 [2018-07-30]
* still produce full sized PDF even if multi*fits files cannot be located or imported (use empty spacing)

* support for tar (reduced data)

* building toward summing fibers (for diffuse emission).
    Add: SyntheticObservation (observation.py)

* added (somewhat hand-wavy) absorption line features to scoring by inverting the spectra and fitting for emission.
  Scores from these features down-scaled to 80% of an equivalent (true) emission line

* added MCMC output (corner plot) of fit paramters of main line (as mcmc_eid(*)_*.png )

* added overplot of MCMC fit to main line gauss*.png (as a 'highlight')

* added --tasks option to allow for multiple tasks in TACC SLURM call


1.4.0a10 [2018-07-27]
* changing project name (and supporting files/references) from voltron to elixer


1.4.0a9 [2018-07-27]
* add MCMC fitting of gaussian (can be used on any line, but currently just on main line and currently only logged)
  (note: testing shows close agreement with scipy curve_fit, so for the additional lines, just use curve_fit as it
   is much faster ... for the main line use MCMC as it provides the estimated distribution (uncertainties) in the
   parameters)

* fixed bug where rsp1 calculated line flux data was being read in units of e-18 instead of e-17

* modified Bayes.basyesian.prob_data_given_OII and prob_data_given_LAE to incorporate uncertainties in the lineflux and
  EqW_obs if known (otherwise defaults back to the previous +/- 5%)


1.4.0a8 [2018-07-05]
* Updated with Isak's new SHELA cats and images

* Updated to cat_shela to only load one tile at a time (as needed) rather than all tiles up front
  (note: photoZ catalog is not by tile, however, and is loaded up front and still takes a while)

* Updated science_image.py to deal with change in astropy and photutils adding units to aperture counts

* Updated science_image.py to use pixel based aperture photometry first (much faster) and switch to sky coord based
  (needs the whole image for WCS) if it fails.


1.4.0a7 [2018-06-25]
* fixed bug where CFHTLS catalog magnitude was not being calculated from flux (resulting in exception in print statement)

* fixed bug where list of matched catalogs was not being tracked per emission line object (could cause empty cutouts if
  detections are from different sky regions with separate catalogs)

* reduced overlapping emission line labels in full 1D plot (only display "major" lines and those that have a match in
  the multiline solution)


1.4.0a6 [2018-06-19]
* add 1 - probability of noise "confidence" to multiline solution
    - use skewed Gaussian noise model with 1e5 samples
    - use SNR * Line_flux as score
    - for 1.0 wide score bins for each emission line, get the prob that it is noise
    - solution confidence = 1.0 - product of each emission line prob(noise)
    - (note: noise only ... does not explicitly deal with partially removed cosmic rays, etc)

* update cat_bayesian (probability of random catalog match) to allow caller selection of MDF vs pseudo-PDF and
  whether or not to integrate over the distance +/- astrometry error (and bin-width).
  Default is pseduo-PDF with integration and assumed error of 0.5"



1.4.0a5 [2018-06-12]
* added dashed lines to indicate possible emission lines in full 1D spectra plot

* fixed bug where PDF displayed EW_rest was EW_obs/z instead of EW_obs/(1+z)

* improvements and tuning on matching detected peaks to additional line positions based on primary emission line

* added best_z, best_confidence, lists of all lines, lines used in classification to *_cat.txt

1.4.0a4 [2018-06-08]
* fit sigmoid and variable degree polynomial (default=3 and better fit) to probability of random alignment
  by magnitude matrix (may want to get more data and more refined bins)

* updated peakfinder (boxcar smoothing w/3x pixels to reduce jitter, boost S/N) then fit with gaussian
  to the original spectra at peak points
    - additional lines (a few NaI, NeV, NeVI)

* reworked multi-line solution finder
  - solution accepted if it dominates the score of all solutions with 2+ additional lines detect of significant quality
        (obs_EW, total flux, etc)
  - added large emission line name and colored highlights to full 1D spectrum plot if a strong multiline solution is found
  - added name, rest wavelength, z, and EW to last line of stats text (upper left)
  (still tbd include this information in a text catalog)

* added hatch marks to skylines to disambiguate from possible emission line highlights

* fixed problem with HSC tract catalogs (entries in tracts corresponding to overlapping tiles do not correctly
  overlap (objects that appear in the overlap region are not necessarily recorded in the overlapping tracts).
  Now keeps all overlapping tracts, not just the one corresponding to the selected image tile.

* allow pdf to still be produced even if rsp1 (*2d.res file) is empty (or all zeroes). Data may be junk, but
  the pdf will still be produced.

* for classification scoring, feed in fluxes as e-18 (rather than e-17) ... the scaling is then very close to
  counts and the downstream logic can remain unchanged




1.4.0a3 [2018-05-25]
* add cat_bayesian package to handle Bayesian treatment of bid catalog objects (priors on likelihood of match to
    observation)
    - initial version of likelihood of being not random (as MDF based on Yaswant's work)
    - sorting possible matches by this prob then distance
    - added to top 3 bid match summaries

* change reported flux for bid catalog objects to magnitude for easier comparison
    (note: in some catalogs, the mag is provided by the catalog, in some it is calculated from the flux)
    uses v,g,r bands (in that order, when present)

* add global option DYNAMIC_MAG_APERTURE that, when true, allows the forced aperture placed on the imaging to calculate
    the magnitude to grow until the magnitude stabilizes or reaches the maximum of the error window. Currently set
    to a minimum of 0.5". Stabilization defined by either an increase in magnitude (dimming) or a change of less than
    0.05 mag. The aperture is sized to match on the cutout and the radius is reported next to the magnitude beneath the
    plot.

* update summing of spectra (upper right) to use RSP1 output when present

* update summed spectra plotting (upper right and full spectra, center) to standard plot (from step plotting)

* fixed(?) stackedCOSMOS and SHELA magnitude calcuations. Imaging counts are already in nJy and do not need to be
    converted.

* update contrast stretching for summed 2D cutout for better readability

* update SHELA and COSMOS aperture magnitude calculations (pixels are already in nJy and do not need conversion)
   (there is still some mismatch between reported mag and aperture mag, but it is closer)

* fixed missing S/N in upper left stats

* remove chi2 if not present (upper left stats)

* (temporarily?) turned off quality score until it can be re-scaled to flux (from counts)

* removed dead code from catalog classes (older versions that optionally produced individual pages for each bid catalog
    match, etc)


[older versions]
* changes not listed. See GitHub version control check-in comments
