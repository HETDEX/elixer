[2019-01-02]
*** Add uncertainty to magnitude (and continuum flux) and equivalent width as calculated by aperture photometry
	to do this, I need the error frame (error in each pixel) to pass to the phot_utils.aperture photometry call
		-- if nothing else, could use numpy to take the square root of each pixel and use that as a Poission error (see observations project 2 : get_mags)
	
		use:     count_err = phot_table['aperture_sum_err'][0] 
			to get the count error (then for magnitude, call call mag_func twice more with +err and -err)








[2018-08-22]
add to _fib.txt for each fiber in a detection, add the center (y) of fiber and x (at detection peak) in the 0th frame of
    multi_*.fits (need to include the amp and ifu_id ... basically, ifu_id, amp, ccd x, ccd y)
    --already there




[2018-07-31] rsp family
for annulus ... run rsp1a2 as ___ ___ max_radius 4500.0 1000 name2 name1
basically, get all fibers in the maximum radius
then use l1 (for the RA, Dec of each fiber, in order) and tmpxxx.dat (each fiber data) to select which fibers to keep
 do the annulus and the addition in your own code, that way, need not maintain any modification to rsp

**note: rsp1a2 for just 30" taking ~ 30+ minutes (~2000 fibers)

Maybe have (defined in hetdex.py?) an RSP object that has an entry for each fiber under the rsp folder (per detection)
(so this would belong to the DetObj) ...
RSP object would have:
                            *            *                                   *
(columns in tmpxxx.dat:  wave, counts, flux, amp_norm, tp_norm, ftf_norm, err_flux)
    path (and filename ...e.g. to tmpxxx.dat)
    wavelengths array
    flux values array (need to know units)
    flux uncertainty array

#########################
# stacking diffuse emission
#########################

x call rsp to large radii
x ingest results
x sub-select fibers by annulus
x align (interpolate)
x stack "empty" fibers
x ?look for any signal

look specfically at central object (LyA) position
 *** when stacking, maybe 3 pixel boxcar smoothing?? could not use that for (true) properties (area, snr, etc) but might
        work well just for deciding that there is signal???

if signal in stack: (get its flux, etc ... as matter of course in determining if there is a signal)
    look at specific wavelength in each fiber
    calc flux, err, p(noise), etc for each

plot fibers on catalog image(s) (if available, blank background if not)
    color code (fill in) each fiber with a gradient based on either SNR or flux (more likely flux ... say fraction
        of some maximum set by the central object or by the total signal or just a constant)
       * color fill, but maybe no edge color (so the overall is soft, no hard small circles?)
    needs a side bar scale (for color gradient) ... recommend same color, just with a gradient rather than a rainbow
    (since this is supposed to be a signal)

plot (second?)
    color code based on p(noise)? ... this is likely to correlate (and does) with SNR and flux, so maybe redundant

can look at plot for shape?

maybe estimate area (in square arcsecs) by counting number of fibers above a certain threshold? what about areas not
    covered by fibers?
alternate estimate ... assume roughly circular and estimate as pi*r^2 where r is the distance from RA, Dec cetner to
    maximum detected fiber position? (but max fiber signal will be, again, by definiation very low)?
    -- in any case the "edge" assuming cirular will be difficult to pin down ...
    -- maybe there will be a gradient trend? as radius increases, flux decreases so maybe fit a curve to that and plot
            an edge with flux drops below some value (like 10^-18)

    *** think about plotting contours of constant flux?? or at least a kind of half-light radius? ****
        (iso-flux lines ... not quite isochrones)

>> ELiXer call
add a new command line parameter "--annulus in,out" followed by two radii in arcsecs
if present, assumes the diffuse mode
    ignore any --error window
    use catalogs for images only ? (do not search for matches)
    do not build cutout images
    DO build full length spectrum of summed spectra
    DO build big image cutout(s) with catalog image background
        --maybe pick optical range image or stack if multiple bands, but just one image

    Deisgn: text at top, basic info like RA, Dec of center (no sky, no IFU, etc), Redshift, Annuli radii

            next line ... full length summed spectra

            next BIG image with fibers (color gradient)



#############################
# absorption lines
############################

invert the spectra (multiple by -1 or subtract from largest value?)
search for emission lines, but mark as absorption



[2018-06-04] -- late summer?
** add new 0th row to top of plot to be generated at the end (but sorted to top when building pdf)
    0th row will have the classification best guess
    And move the version info to 0th row (top right)


[2018-05-10]
Update ifu.IFU() constructor to make use of rsp1 output ...
    + may need to call rsp1 manually (since the output is per detection, not per ifu and it
        performs fiber normalization)

Would be useful if fibers (spectra per fiber) flux calibrated on its own (maybe in extra
    fits payload in multi_* files?). Need this for summing over IFUs? Could still use rsp1 files,
    but would be more convenient if in multi* file




** photo/imaging catalogs
	- need more spring coverage (GOODS-N, etc) : 
		(spring ~ RA: 160 - 230, Dec: 45 - 56)
		[CFHTLS: 208-220;51-57]
		
	- need more fall coverage:


** Test cases ...
   look over prior runs and piece together representatitve cases
   * per catalog
     - no targets
     - 3 or fewer
     - more than 3
   save as a single line file (pull full lines from t5cut and stitch together in a single file)


* make master_cutout larger than initially needed (crop down to display to needed extent),
so can use as base if fiber positions are too spread out




* add option in svoltron.py for:
     select queue (gpu or vis?)
     parameteric file name ?

* for multi-page view, see if can figure that out early and set the first page with blanks so is
  the same size as a single page (makes scanning through images less jerky)
  - maybe always plot (with colored squares) all hits, but have the second line empty (with note
    saying pages to follow)

* Combine emission line detections:
scan detections for a given IFU (hd object) and try to match up (that is, find detections that belong
to a single object and combine .... display the list of detect IDs and line #'s in the top line
of the report).
   - conditions to meet for any two detections to be the same object:
   1. must share at least one fiber
   2. must be within 1" (maybe 1.5"?)
   3. summed 1D spectra of each must have similar peaks? (same peaks +/- at most 5.7AA ... note that
   some peaks may be stronger/weaker depedning on where fibers fall)
   >> Todo: need a way to really identify peaks (there may be something in astropy)
   >> Todo: how to logically merge?? pick one as the base and add the fibers from the other (so can get
            more than 5 fibers ... but do not duplicate the common fibers (that is, do not add the same
            fibers that they share)
   >> Todo: then pick the strongest (counts or S/N) peak as the yellow highlight ?? and make the
            cut outs from that one
   >> Todo: optional? also color highlight (not yellow) the other peaks, so would need to keep a list
            of the other emis detects (or a list of the relevant data elements)
   >> Todo: new member variable that says whether this emis obj is a Primary (and should be printed)
            or a secondary and will not be printed


* incorporate and expand Andrew Bayesian LAE v OII.
  -- expand to include other data in priors (maybe from photometric image matching (its PDF), or
     more HETDEX spectral data ... e.g. goodness of peaks and goodness (likelihood) of other
     contributing lines), line flux (measured), EW (estimate?))
     Also, distance to photo source and flux of source in comparable range to
     HETDEX. (I.e if really bright but HETDEX is weak then not it ... needs
     calibrated flux from hetdex
  -- this should be independent of standard voltron (that is, treat like a subpackage or different package)
     --need a way to call without voltron objects (i.e. spectra can be just an array of counts, but
       need a way to quantify other data (like catalog image objects, etc)
  --

* Peak finder
  -- scan the combined spectra and look for (other) peaks (ie. part of * Combined emission line detections)

* Pop III signature finder
  Could be made more general with different (known) object types by matching a template(s) for each based on
    line locations, widths, and heights (or relative strengths)
  -- specifically for Pop III .... look for strong LyA + clear [HeII] and absence of [CIV] (maybe absence of other
  lines also ... MgII, etc).
  -- needs peak finder
  -- needs LAE/OII probabilty (as LyA - HeII similar to OII - OIII)



Done:

** Add CHFTLS ?? as new catalog (overlaps with CANDLES_EGS) or as supplement to CANDLES_EGS?
-- if suplement, need extra set of max, min RA, DEC (if not found in original set, check these)
    -- bascially, if outside range OR if no matching targets? check the other
-- if its own, what to do if hits in both?
   -- same hits or different?
   -- single page (extra rows?)
--probably the first approach is overall simpler and will produce more what is expected in output

* name: HIVES (Hetdex Image matching and Visualization of Emission Sources) [no: leave as voltron]

* add ground-based imaging catalog (see http://terapix.iap.fr/article.php?id_article=586 ) [CFHTLS]
